Search.setIndex({"docnames": ["api/cache", "api/filter", "api/index", "api/indexschema", "api/query", "api/searchindex", "api/vectorizer", "examples/index", "examples/openai_qna", "index", "overview/installation", "user_guide/cli", "user_guide/getting_started_01", "user_guide/hash_vs_json_05", "user_guide/hybrid_queries_02", "user_guide/index", "user_guide/llmcache_03", "user_guide/vectorizers_04"], "filenames": ["api/cache.rst", "api/filter.rst", "api/index.md", "api/indexschema.rst", "api/query.rst", "api/searchindex.rst", "api/vectorizer.rst", "examples/index.md", "examples/openai_qna.ipynb", "index.md", "overview/installation.md", "user_guide/cli.ipynb", "user_guide/getting_started_01.ipynb", "user_guide/hash_vs_json_05.ipynb", "user_guide/hybrid_queries_02.ipynb", "user_guide/index.md", "user_guide/llmcache_03.ipynb", "user_guide/vectorizers_04.ipynb"], "titles": ["LLMCache", "Filter", "RedisVL API", "IndexSchema", "Query", "SearchIndex", "Vectorizer", "Example Gallery", "Question and Answer with OpenAI and RedisVL", "Redis Vector Library (RedisVL)", "Install RedisVL", "Redis Vector Library CLI (<code class=\"docutils literal notranslate\"><span class=\"pre\">rvl</span></code>)", "Getting Started with RedisVL", "Hash vs JSON Storage", "Querying with RedisVL", "User Guides", "Semantic Caching for LLMs", "Vectorizers"], "terms": {"class": [0, 1, 3, 4, 5, 6, 12, 14], "name": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17], "prefix": [0, 3, 5, 8, 11, 12, 13, 14, 16, 17], "none": [0, 1, 3, 4, 5, 6, 14], "distance_threshold": [0, 4, 8, 14, 16], "0": [0, 1, 4, 6, 8, 11, 12, 13, 14, 16, 17], "1": [0, 1, 6, 8, 11, 12, 13, 14, 16, 17], "ttl": [0, 5], "vector": [0, 1, 2, 3, 4, 5, 8, 10, 12, 14, 15, 16], "redisvl": [0, 1, 3, 4, 5, 6, 7, 11, 13, 15, 16, 17], "text": [0, 2, 3, 6, 11, 12, 13, 15, 16], "huggingfac": [0, 12, 15], "hftextvector": [0, 2, 17], "object": [0, 1, 4, 5, 13, 14, 15, 16], "redis_url": [0, 5, 8, 12, 16], "redi": [0, 1, 3, 4, 5, 6, 7, 8, 13, 15, 16, 17], "localhost": [0, 5, 8, 9, 10, 12, 13, 14, 16, 17], "6379": [0, 5, 8, 9, 10, 12, 13, 14, 16, 17], "connection_arg": [0, 5], "kwarg": [0, 3, 5, 6], "sourc": [0, 1, 3, 4, 5, 6], "base": [0, 1, 3, 4, 5, 6, 9, 14, 17], "basellmcach": 0, "semant": [0, 8, 9, 15], "cach": [0, 9, 15], "larg": [0, 8, 16], "languag": [0, 1, 6, 11, 16, 17], "model": [0, 3, 6, 8, 12, 13, 16, 17], "paramet": [0, 1, 3, 4, 5, 6, 14, 17], "str": [0, 1, 3, 4, 5, 6, 8, 14, 16], "option": [0, 1, 3, 4, 5, 6, 10, 11, 12, 13, 16], "The": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 14, 16, 17], "search": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "index": [0, 1, 3, 4, 5, 8, 9, 13, 14, 15, 16, 17], "default": [0, 1, 3, 4, 5, 6, 12, 13], "kei": [0, 3, 5, 6, 8, 11, 12, 13, 14, 16, 17], "associ": [0, 3], "us": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17], "float": [0, 1, 4, 6, 12, 15], "threshold": [0, 4, 8, 14, 16], "int": [0, 1, 4, 5, 6, 8], "time": [0, 5, 7, 8, 16], "live": [0, 5, 8], "record": [0, 8, 13, 14], "basevector": [0, 6], "url": [0, 5, 8, 16], "dict": [0, 3, 4, 5, 6, 12, 13], "ani": [0, 3, 4, 5, 9, 14, 16], "connect": [0, 5, 8, 12, 13, 14, 16, 17], "argument": [0, 3, 5], "client": [0, 5, 6, 9, 14, 15], "rais": [0, 1, 3, 4, 5, 6], "typeerror": [0, 4, 5, 6], "If": [0, 1, 3, 4, 5, 6, 7, 8, 10], "an": [0, 1, 3, 5, 6, 8, 10, 11, 13, 14, 15, 16, 17], "invalid": [0, 6, 16], "i": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 16, 17], "provid": [0, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16], "valu": [0, 1, 3, 4, 5, 11, 12, 13, 14, 16], "valueerror": [0, 1, 3, 5, 6], "between": [0, 4, 5, 8, 14], "check": [0, 5, 8, 11, 14, 15, 16], "prompt": [0, 8, 16], "num_result": [0, 4, 8, 12, 17], "return_field": [0, 1, 4, 8, 12, 13, 14, 16, 17], "result": [0, 4, 5, 8, 9, 12, 13, 14, 16, 17], "similar": [0, 8, 9, 12, 14, 16, 17], "specifi": [0, 3, 5, 6, 14], "thi": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "method": [0, 3, 5, 6, 12, 14, 16], "either": [0, 1, 3, 5, 12, 14], "raw": [0, 6, 15], "convert": [0, 3, 6, 12], "input": [0, 3, 6, 16], "It": [0, 3, 5, 8, 14], "fetch": [0, 4, 5, 15], "llm": [0, 7, 9, 15, 17], "respons": [0, 8, 16], "list": [0, 1, 3, 4, 5, 6, 8, 11, 13, 14], "represent": [0, 3], "number": [0, 4, 5, 8, 11, 14, 16, 17], "return": [0, 1, 3, 4, 5, 6, 8, 11, 14, 16], "field": [0, 1, 3, 4, 5, 8, 11, 12, 13, 14, 16, 17], "includ": [0, 3, 5, 8, 12, 14, 17], "each": [0, 3, 5, 8, 17], "all": [0, 3, 5, 6, 8, 10, 11, 13, 14, 17], "avail": [0, 11], "entri": [0, 12, 13, 16], "A": [0, 1, 3, 4, 5, 8, 14], "contain": [0, 1, 3, 5, 6, 10, 13, 14], "request": [0, 7, 8, 14, 16, 17], "type": [0, 1, 3, 4, 5, 6, 11, 12, 13, 14, 16], "neither": 0, "nor": [0, 5], "when": [0, 6, 10, 13, 14], "what": [0, 8, 12, 14, 16, 17], "captial": 0, "citi": [0, 16], "franc": [0, 16], "clear": [0, 12, 16], "while": [0, 3, 8, 12, 14], "preserv": 0, "delet": [0, 5, 11, 12, 13, 16], "remov": [0, 3, 14], "underli": [0, 3, 5, 12, 13, 14, 16], "deseri": 0, "metadata": [0, 3, 5, 8, 13, 16], "from": [0, 1, 3, 4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 17], "string": [0, 5, 6, 15, 16], "hash_input": 0, "hash": [0, 3, 5, 9, 11, 12, 14, 15, 16, 17], "sha256": 0, "serial": 0, "serliz": 0, "set_threshold": [0, 16], "set": [0, 3, 4, 5, 6, 8, 12, 13, 14, 17], "distanc": [0, 1, 4, 14, 16], "set_ttl": 0, "second": [0, 5, 16], "expir": 0, "integ": [0, 5, 8], "set_vector": 0, "must": [0, 3, 5, 6, 12, 13, 14], "valid": [0, 3, 5], "subclass": 0, "have": [0, 1, 8, 9, 10, 11, 12, 13, 14, 16, 17], "equival": 0, "dimens": [0, 6, 17], "defin": [0, 1, 3, 5, 13, 14, 15], "schema": [0, 3, 5, 11, 13, 14, 15, 17], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17], "mismatch": 0, "store": [0, 3, 5, 6, 8, 12, 13, 14, 16, 17], "pair": [0, 13], "along": [0, 5, 6, 9], "user": [0, 1, 6, 8, 9, 12, 13, 14, 16], "gener": [0, 3, 6, 14, 16], "demand": 0, "alongsid": 0, "ad": [0, 3, 7], "dictionari": [0, 3, 5, 6, 12, 13, 16, 17], "pari": [0, 16], "countri": [0, 16], "fanc": 0, "properti": [0, 3, 4, 5], "searchindex": [0, 2, 9, 13, 14, 15, 17], "_filter": 1, "oper": [1, 4, 5, 6, 10, 14], "left": 1, "right": [1, 13], "logic": 1, "express": [1, 4, 14], "filterfield": 1, "can": [1, 5, 6, 8, 10, 11, 12, 13, 14, 17], "combin": [1, 5, 12, 15], "creat": [1, 3, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16], "complex": [1, 14], "evalu": 1, "queri": [1, 2, 3, 5, 6, 8, 9, 10, 11, 15, 17], "present": 1, "interfac": [1, 9, 12, 16], "which": [1, 3, 4, 8, 10, 14, 17], "without": [1, 11, 12, 14, 16], "know": [1, 8], "directli": [1, 5, 6], "instead": [1, 5, 12, 14], "thei": 1, "built": [1, 5, 8, 17], "import": [1, 3, 4, 5, 6, 8, 12, 13, 14, 16, 17], "brand_is_nik": 1, "brand": [1, 4, 13], "nike": [1, 4], "price_is_over_100": 1, "price": [1, 4, 13], "100": [1, 14, 16], "print": [1, 8, 12, 13, 14, 16, 17], "inf": [1, 14], "vectorqueri": [1, 2, 8, 13, 14, 15, 17], "v": [1, 9, 14, 15, 17], "5": [1, 8, 11, 12, 13, 14, 16, 17], "vector_field_nam": [1, 4, 8, 12, 14, 17], "product_embed": 1, "product_id": 1, "filter_express": [1, 4, 13, 14], "filteroper": 1, "repres": [1, 3, 4], "against": [1, 6, 13], "__eq__": 1, "other": [1, 3, 5, 9, 11, 15], "equal": [1, 5], "union": [1, 3, 5, 15], "": [1, 3, 5, 6, 8, 11, 12, 14, 17], "__init__": 1, "__ne__": 1, "inequ": 1, "__str__": 1, "syntax": 1, "__hash__": 1, "__weakref__": 1, "weak": 1, "refer": [1, 12], "These": [1, 6, 13, 14], "yield": [1, 8, 14], "enforc": [1, 14], "exact": [1, 13, 14], "match": [1, 5, 14], "suppli": [1, 3], "term": [1, 4], "job": [1, 12, 13, 14], "engin": [1, 12, 13, 14, 16], "__mod__": 1, "like": [1, 5, 11, 12, 13, 14, 17], "flexibl": [1, 3, 6, 13], "varieti": [1, 6, 13], "addit": [1, 3, 5, 8], "wildcard": [1, 14], "fuzzi": [1, 14], "combinator": 1, "suffix": 1, "wild": 1, "card": 1, "w": 1, "levenshtein": 1, "doctor": [1, 12, 14], "both": [1, 6, 12, 13], "negat": [1, 14], "opposit": 1, "self": [1, 3, 8], "numer": [1, 3, 8, 12, 13, 15], "zipcod": 1, "90210": 1, "__ge__": 1, "greater": [1, 8], "than": [1, 5, 8, 12, 14], "ag": [1, 12, 13, 14], "18": [1, 8, 13, 14], "__gt__": 1, "__le__": 1, "less": [1, 5], "__lt__": 1, "geograph": [1, 15, 17], "lat": 1, "lon": 1, "geospec": 1, "spec": 1, "locat": [1, 6, 14], "122": [1, 13, 14], "4194": [1, 13, 14], "37": [1, 13, 14], "7749": [1, 13, 14], "unit": [1, 8], "m": [1, 8], "longitud": 1, "latitud": 1, "radiu": [1, 14], "km": [1, 14], "specif": [1, 3, 5, 13, 14, 16], "center": 1, "circl": 1, "one": [1, 5, 8, 12, 14], "mi": 1, "ft": [1, 5], "indexschema": [2, 5, 9, 15], "rangequeri": [2, 14], "filterqueri": [2, 14], "countqueri": [2, 14], "filter": [2, 4, 9, 13, 15], "filterexpress": [2, 4, 14], "tag": [2, 3, 4, 5, 8, 12, 13, 15], "num": [2, 13, 14], "geo": [2, 3, 13, 14, 17], "georadiu": [2, 14], "openaitextvector": [2, 8, 17], "vertexaitextvector": [2, 17], "coheretextvector": [2, 17], "llmcach": [2, 8, 9, 16], "semanticcach": [2, 8, 15], "rvl": [3, 5, 8, 13, 14, 15, 16, 17], "key_separ": [3, 5, 17], "storage_typ": [3, 5, 11, 12, 13, 14, 17], "storagetyp": [3, 5, 13], "basemodel": 3, "definit": [3, 12], "organ": 3, "structur": [3, 13], "data": [3, 5, 6, 11, 13, 14, 15, 17], "inform": [3, 5, 11, 12, 16, 17], "about": [3, 5, 6, 8, 11, 14], "storag": [3, 5, 9, 11, 12, 15, 16], "format": [3, 12, 13], "convent": 3, "databas": [3, 5, 6, 9, 10, 13], "conveni": 3, "constructor": 3, "from_dict": [3, 5, 12, 13, 14], "from_yaml": [3, 5, 8, 12, 17], "load": [3, 4, 5, 11, 13, 14, 15, 17], "your": [3, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17], "note": [3, 5, 8, 12, 13], "uniqu": [3, 5, 12, 14], "basefield": 3, "basevectorfield": 3, "separ": [3, 5, 10, 12], "charact": 3, "enum": 3, "e": [3, 8, 10, 12], "g": 3, "json": [3, 5, 9, 15, 17], "map": 3, "yaml": [3, 5, 8, 11, 12, 17], "my": [3, 5, 8], "doc": [3, 4, 5, 14, 17], "id": [3, 5, 8, 12, 14, 16, 17], "embed": [3, 6, 7, 9, 11, 12, 15], "algorithm": [3, 6, 8, 11, 12, 13, 14, 17], "flat": [3, 8, 11, 12, 13, 14, 17], "dim": [3, 8, 11, 12, 13, 14, 17], "1536": [3, 8, 17], "new": [3, 5, 11, 14, 15, 16], "pars": 3, "keyword": [3, 5], "validationerror": 3, "cannot": 3, "form": [3, 5], "add_field": 3, "field_typ": 3, "add": [3, 5, 12], "singl": [3, 5, 6, 13, 14], "attribut": [3, 11, 12, 16], "allow": [3, 6, 10, 12, 14, 17], "individu": 3, "requir": [3, 6, 8, 10, 12, 14], "alreadi": [3, 5, 8, 12, 13], "exist": [3, 5, 8, 12], "within": [3, 8, 11, 14, 16], "extend": [3, 8], "dynam": [3, 15], "process": [3, 5, 6, 13, 17], "where": [3, 5, 6, 14, 17], "correspond": [3, 6], "same": [3, 5, 8, 11, 13, 14, 17], "classmethod": [3, 5], "check_unique_field_nam": 3, "construct": [3, 12, 13, 14, 17], "_fields_set": 3, "__dict__": [3, 14], "__fields_set__": 3, "trust": 3, "pre": [3, 6, 17], "respect": 3, "perform": [3, 5, 6, 8, 9, 14, 15], "behav": 3, "config": 3, "extra": [3, 5], "wa": [3, 8], "sinc": [3, 16], "pass": [3, 5, 6, 12, 13], "setstr": 3, "copi": [3, 13], "exclud": 3, "updat": [3, 8, 13, 15], "deep": 3, "fals": [3, 5, 6, 12, 14, 16, 17], "duplic": 3, "choos": [3, 14, 15, 17], "chang": [3, 12, 14], "abstractsetintstr": 3, "mappingintstrani": 3, "take": [3, 5, 14], "preced": 3, "over": [3, 6, 8, 12, 14, 16], "dictstrani": 3, "befor": [3, 5, 6, 8, 11, 13, 14, 17], "you": [3, 6, 7, 8, 10, 11, 12, 13, 14, 17], "should": [3, 5, 6, 16, 17], "bool": [3, 4, 5, 6], "true": [3, 4, 5, 8, 12, 13, 14, 17], "make": [3, 6, 8, 9, 10, 12, 17], "instanc": [3, 5, 8, 11, 12, 13, 14, 17], "by_alia": 3, "skip_default": 3, "exclude_unset": 3, "exclude_default": 3, "exclude_non": 3, "file_path": 3, "file": [3, 5, 12, 17], "path": [3, 5, 15, 17], "generate_field": 3, "strict": 3, "ignore_field": 3, "sampl": [3, 13, 15], "simplifi": 3, "infer": 3, "particularli": [3, 6], "dure": [3, 8], "develop": 3, "deal": 3, "dataset": [3, 6, 13, 14, 15], "reduc": [3, 8, 16], "need": [3, 6, 8, 10, 12, 13, 14, 17], "manual": [3, 5], "error": [3, 6], "fail": [3, 5], "empti": [3, 14, 16], "emploi": 3, "heurist": 3, "mai": [3, 8, 14], "alwai": 3, "correctli": 3, "encod": [3, 8], "models_as_dict": 3, "dumps_kwarg": 3, "per": 3, "function": [3, 5, 12, 14, 16], "dump": 3, "callabl": [3, 5, 6], "unicod": 3, "remove_field": 3, "field_nam": 3, "alter": 3, "doe": [3, 5, 14], "to_dict": [3, 8], "to_yaml": 3, "overwrit": [3, 5, 8, 12, 13, 14, 17], "write": [3, 5], "whether": [3, 4, 5, 6], "fileexistserror": 3, "update_forward_ref": 3, "localn": 3, "try": [3, 16], "forwardref": 3, "globaln": 3, "redis_field": 3, "core": 3, "py": [3, 4, 5, 15], "current": [3, 14], "suitabl": 3, "facilit": 3, "creation": [3, 9, 15], "manag": [3, 9, 10, 11], "redisfield": 3, "dtype": [4, 12, 13], "float32": [4, 12, 13, 14], "10": [4, 5, 6, 8, 14, 17], "return_scor": 4, "dialect": [4, 14], "2": [4, 6, 8, 12, 13, 14, 16, 17], "basevectorqueri": 4, "read": 4, "more": [4, 6, 12, 14, 17], "http": [4, 6, 8, 9, 10, 17], "io": 4, "interact": [4, 5, 6, 9], "knn": [4, 14], "appli": [4, 14], "score": [4, 14], "get_filt": 4, "get": [4, 5, 8, 9, 10, 11, 14, 15, 17], "set_filt": [4, 14], "set_pag": 4, "first": [4, 8, 11, 12, 16, 17], "limit": [4, 14], "page": [4, 5, 7], "fist": 4, "zero": [4, 5], "offset": 4, "_description_": 4, "param": [4, 13, 14], "command": [4, 8, 9, 10, 11], "rang": [4, 8, 15], "metric": 4, "max": 4, "set_distance_threshold": [4, 14], "treshold": 4, "basequeri": [4, 5], "t": [4, 8, 13, 14, 17], "q": 4, "simpl": [4, 12, 13, 15, 17], "count": [4, 15], "some": [4, 5, 8, 11, 12, 14], "redis_cli": 5, "wrapper": [5, 16], "around": [5, 8, 16], "purpos": [5, 12, 14], "initi": [5, 6, 12, 15], "iter": [5, 17], "do": [5, 8, 10, 14], "async": [5, 6, 8, 12], "use_async": [5, 8, 12], "await": [5, 6, 8, 12, 17], "acreat": [5, 8, 12], "aload": [5, 8], "asynchron": [5, 6, 15], "runtimeerror": 5, "adelet": [5, 12], "drop": [5, 8, 12], "document": [5, 6, 13, 14, 17], "except": [5, 14], "responseerror": 5, "aexist": 5, "otherwis": 5, "afetch": 5, "etch": 5, "typic": [5, 13], "identifi": 5, "deriv": 5, "domain": [5, 13], "chunk": [5, 6], "particular": 5, "ainfo": 5, "alistal": 5, "indic": [5, 8, 9, 11, 12, 13, 14, 17], "key_field": 5, "preprocess": [5, 6], "concurr": 5, "control": 5, "length": [5, 8], "maximum": [5, 8], "level": [5, 13], "test": [5, 6, 10, 12, 14, 15, 17], "foo": 5, "bar": 5, "aqueri": [5, 8, 12], "execut": [5, 14, 15], "run": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17], "handl": [5, 6], "post": 5, "aindex": 5, "aquery_batch": 5, "batch_siz": [5, 6], "30": [5, 8, 14], "batch": [5, 6], "support": [5, 6, 9, 10, 14, 15, 17], "size": [5, 6, 8], "asearch": 5, "arg": [5, 16], "rest": 5, "establish": 5, "server": 5, "endpoint": 5, "attempt": [5, 14], "environ": [5, 6, 9, 10, 11, 12, 13, 14, 16, 17], "variabl": [5, 6, 17], "determin": 5, "connectionerror": 5, "access": [5, 9, 17], "through": [5, 6, 11, 12, 13, 14], "standard": 5, "sync": 5, "disconnect": 5, "reset": 5, "schema_dict": 5, "schema_path": 5, "info": [5, 11, 12, 16], "full": [5, 8, 15], "listal": [5, 8, 11, 12, 13, 14, 17], "pipelin": 5, "query_batch": 5, "set_client": 5, "configur": [5, 12], "case": [5, 6, 8, 13, 14], "extern": 5, "custom": [5, 8], "prefer": [5, 8], "aredi": 5, "r": [5, 14], "from_url": 5, "asyncio": 5, "come": [5, 10], "sentenc": [6, 8, 11, 12, 17], "transform": [6, 12, 17], "mpnet": [6, 17], "v2": [6, 17], "design": [6, 12], "leverag": [6, 9], "power": [6, 9], "hug": 6, "face": 6, "scenario": [6, 12, 14], "advanc": 6, "natur": 6, "understand": [6, 14], "ideal": 6, "own": 6, "hardwar": 6, "free": [6, 10, 13], "util": [6, 13, 14], "involv": [6, 8], "train": [6, 17], "vast": 6, "collect": [6, 13], "task": [6, 11], "ensur": [6, 12], "versatil": [6, 12], "robust": 6, "across": 6, "differ": [6, 14, 17], "addition": 6, "sure": [6, 9, 10, 11, 13, 14, 17], "librari": [6, 10, 12, 17], "instal": [6, 8, 11, 12, 13, 14, 17], "pip": [6, 8, 9, 10, 17], "emb": [6, 8, 17], "hello": 6, "world": [6, 12], "embed_mani": [6, 8, 17], "how": [6, 8, 11, 12, 14, 15, 16, 17], "importerror": 6, "as_buff": [6, 8, 17], "byte": [6, 12, 15, 17], "wrong": 6, "1000": [6, 8], "mani": [6, 17], "ada": [6, 8, 17], "002": [6, 8, 17], "api_config": [6, 8, 17], "openai": [6, 7, 9, 12, 15, 16], "api": [6, 8, 9, 12, 16, 17], "authent": 6, "openai_api_kei": [6, 8, 16, 17], "obtain": [6, 16], "websit": [6, 17], "com": [6, 8, 10], "python": [6, 8, 9, 10, 11, 12, 13, 16], "28": [6, 8], "synchron": 6, "api_kei": [6, 8, 16, 17], "your_api_kei": 6, "OR": [6, 14], "env": [6, 17], "multipl": [6, 8, 13, 14], "aembed_mani": [6, 17], "aemb": 6, "textembed": 6, "gecko": 6, "googl": [6, 17], "vertexai": [6, 15], "palm": 6, "tailor": 6, "integr": [6, 12], "cloud": [6, 9, 12, 17], "platform": [6, 8, 17], "gcp": [6, 17], "servic": [6, 16, 17], "activ": [6, 11, 13, 14, 17], "project": [6, 17], "region": [6, 17], "appropri": 6, "applic": [6, 9, 12, 13, 16], "credenti": [6, 17], "aiplatform": [6, 17], "26": [6, 8, 14, 17], "project_id": 6, "your_gcp_project_id": 6, "gcp_project_id": [6, 17], "your_gcp_loc": 6, "gcp_locat": [6, 17], "google_application_credenti": [6, 17], "path_to_your_cr": 6, "goodby": 6, "english": [6, 17], "v3": [6, 17], "coher": [6, 12, 15], "cohere_api_kei": [6, 17], "dashboard": 6, "onli": [6, 14], "query_embed": [6, 8, 17], "here": [6, 10, 14, 17], "input_typ": [6, 17], "search_queri": [6, 17], "doc_embed": 6, "search_docu": [6, 17], "visit": 6, "ai": [6, 12, 17], "learn": [6, 12, 13], "re": 6, "give": 6, "db": [6, 13], "find": [6, 8, 14, 17], "relev": 6, "classif": 6, "classifi": 6, "cluster": [6, 10], "hydrat": 6, "want": [6, 12, 14], "downstream": 6, "higher": 6, "In": [6, 8, 12, 13, 14, 17], "pleas": 7, "consid": [7, 10, 12], "open": [7, 13, 14], "pull": [7, 8], "github": [7, 10], "arxiv": 7, "paper": 7, "real": [7, 12], "bytewax": 7, "question": [7, 16], "answer": [7, 16], "recommend": [7, 10, 12, 13], "hotel": 7, "chat": 7, "pdf": 7, "exampl": [8, 9, 13, 14, 15, 17], "show": [8, 13, 14, 17], "notebook": [8, 11, 13, 14, 16, 17], "we": [8, 10, 11, 12, 13, 14, 16, 17], "download": [8, 10, 17], "articl": [8, 12], "thank": 8, "cdn": 8, "gpt": [8, 16], "3": [8, 9, 10, 12, 13, 14, 16, 17], "imag": [8, 10], "below": [8, 12, 13, 14, 16], "architectur": 8, "order": [8, 12], "redisearch": [8, 13, 14, 17], "local": [8, 9, 12, 13, 14, 17], "follow": [8, 10, 11, 12, 13, 14, 17], "termin": 8, "docker": [8, 9, 10, 13, 17], "vecdb": 8, "d": [8, 9, 10, 13, 17], "p": [8, 9, 10, 13, 17], "8001": [8, 9, 10, 13, 17], "stack": [8, 9, 12, 13, 17], "latest": [8, 9, 10, 13, 17], "also": [8, 9, 10, 12, 13, 14, 16, 17], "redisinsight": [8, 13, 17], "gui": [8, 9, 10], "next": [8, 12, 16], "depend": [8, 10], "few": [8, 10], "thing": 8, "panda": 8, "wget": 8, "tenac": 8, "tiktoken": 8, "satisfi": 8, "tyler": [8, 12, 14], "hutcherson": 8, "redisventur": [8, 10], "venv": 8, "lib": 8, "python3": 8, "9": [8, 12, 16], "site": 8, "packag": [8, 10], "4": [8, 12, 13, 14, 17], "8": [8, 9, 10, 13, 16], "20": [8, 14], "31": 8, "tqdm": 8, "66": 8, "aiohttp": 8, "numpi": [8, 12, 13], "22": 8, "dateutil": 8, "pytz": 8, "2020": 8, "2023": 8, "post1": 8, "tzdata": 8, "2022": 8, "regex": 8, "six": 8, "16": [8, 12, 16], "charset": 8, "normal": [8, 13], "idna": 8, "6": [8, 13, 14], "urllib3": 8, "21": 8, "certifi": 8, "2017": 8, "17": [8, 13], "11": 8, "attr": 8, "23": 8, "multidict": 8, "7": [8, 12, 13, 16], "yarl": 8, "frozenlist": 8, "aiosign": 8, "timeout": 8, "restart": 8, "kernel": 8, "pd": 8, "embeddings_url": 8, "wikipedia_articles_2000": 8, "csv": 8, "df": 8, "read_csv": 8, "column": 8, "unnam": 8, "head": 8, "titl": 8, "3661": 8, "org": 8, "wiki": 8, "photon": 8, "greek": 8, "\u03c6\u03c9\u03c2": 8, "mean": [8, 14], "light": 8, "7796": 8, "thoma": 8, "20dolbi": 8, "dolbi": 8, "born": 8, "morgan": 8, "robertson": 8, "14": [8, 11, 14], "67912": 8, "embroideri": 8, "art": 8, "decor": 8, "fabric": 8, "44309": 8, "consecut": 8, "ea": 8, "41741": 8, "german": 8, "20empir": 8, "empir": 8, "deutsch": 8, "reich": 8, "deut": 8, "smaller": 8, "piec": 8, "becaus": [8, 12, 13, 14], "sent": [8, 16], "code": 8, "heavili": 8, "text_embedding_chunk_s": 8, "embeddings_model": 8, "def": [8, 14, 16], "n": 8, "token": [8, 14, 16], "success": 8, "split": 8, "end": [8, 16], "len": [8, 17], "nearest": 8, "j": 8, "min": 8, "decod": 8, "stop": 8, "newlin": 8, "endswith": 8, "break": 8, "found": 8, "get_unique_id_for_file_chunk": 8, "chunk_index": 8, "chunk_text": 8, "chunked_record": 8, "file_body_str": 8, "tupl": 8, "text_chunk": 8, "token_chunk": 8, "f": [8, 14, 16], "enumer": 8, "doc_id": 8, "append": 8, "content": [8, 16], "file_chunk_index": 8, "initialis": 8, "oai_token": 8, "get_encod": 8, "cl100k_base": 8, "_": 8, "iterrow": 8, "chunked_data": 8, "datafram": 8, "nphoton": 8, "nelementari": 8, "particl": 8, "nthoma": 8, "nembroideri": 8, "nconsecut": 8, "numb": 8, "With": [8, 12], "broken": 8, "up": [8, 9, 10, 12, 17], "o": [8, 16, 17], "getpass": [8, 16, 17], "getenv": [8, 16], "enter": [8, 16, 17], "oaip": 8, "tolist": 8, "b": [8, 12, 13], "x9e": 8, "xbf": 8, "xc9": 8, "xca": 8, "x8e": 8, "xfb": 8, "x00": [8, 12, 13, 14], "xf8p": 8, "xbc": 8, "xe5": 8, "xda": 8, "xb7": 8, "xf1": 8, "x8c": 8, "lt": 8, "xea": 8, "xd0m": 8, "x13": 8, "x8b": 8, "ng": 8, "xce": 8, "xbck": 8, "xf0": 8, "xb2": 8, "x81": 8, "xed": 8, "xd7": 8, "xb6": 8, "x94": 8, "xa4": 8, "xba": 8, "xf5": 8, "xf3": 8, "x02": 8, "xa1": 8, "x15o": 8, "x": 8, "xfa": 8, "xbb": 8, "xd2": 8, "xd9": 8, "xaf": 8, "x92": 8, "x9a": [8, 13, 14], "xd3fl": 8, "2688": 8, "alani": 8, "morissett": 8, "20mor": 8, "ntwin": 8, "peopl": 8, "ca": 8, "xc15": 8, "xbcuw": 8, "xe7": 8, "xe4": 8, "x16": 8, "x87": 8, "2689": 8, "brontosauru": 8, "nbrontosauru": 8, "genu": 8, "xbcy": 8, "xc0": 8, "xb4": 8, "x1cn": 8, "xe9": 8, "xcc": [8, 12, 13, 14], "2690": 8, "work": [8, 11, 12, 15], "physic": 8, "28ph": 8, "nin": 8, "forc": 8, "x97": 8, "x82": 8, "xb9": 8, "xbbl": 8, "x90d": 8, "xb7g": 8, "x9c": 8, "x94g": 8, "2691": 8, "syllabl": 8, "na": 8, "pron": 8, "xa3": 8, "x1c": 8, "x83g": 8, "x90": 8, "x99": [8, 13, 14], "x10": 8, "2692": 8, "ngrammar": 8, "x0f": 8, "x9d": 8, "xc4": 8, "xd4": 8, "xcd": [8, 12, 13, 14], "2693": 8, "row": [8, 13], "now": [8, 13, 16, 17], "them": [8, 17], "writefil": 8, "wiki_schema": 8, "oaiwiki": 8, "distance_metr": [8, 11, 12, 13, 14, 17], "cosin": [8, 11, 12, 13, 14, 17], "32m21": 8, "51": 8, "38": 8, "0m": [8, 11, 12, 13, 14, 17], "34m": [8, 11, 12, 13, 14, 17], "30minfo": [8, 11, 12, 13, 14, 17], "orient": 8, "three": 8, "action": 8, "most": 8, "retriev": [8, 13], "send": 8, "chat_model": 8, "turbo": [8, 16], "make_prompt": 8, "retrieval_prompt": 8, "ha": [8, 12, 14, 16, 17], "guess": 8, "respond": [8, 16], "don": [8, 14], "retrieve_context": 8, "top": [8, 13], "vector_queri": 8, "answer_quest": [8, 16], "context": 8, "chatcomplet": 8, "messag": 8, "role": 8, "max_token": [8, 16], "500": 8, "choic": [8, 16], "textwrap": 8, "wrap": 8, "width": 8, "80": 8, "known": 8, "apatosauru": 8, "dinosaur": 8, "late": 8, "jurass": 8, "period": 8, "150": 8, "million": 8, "year": 8, "ago": 8, "herbivor": 8, "long": 8, "neck": 8, "small": [8, 14], "thick": 8, "bodi": 8, "largest": 8, "land": 8, "anim": 8, "reach": 8, "70": 8, "feet": [8, 14], "weigh": 8, "ton": 8, "sens": [8, 12], "trackiosamidon": 8, "tell": 8, "me": 8, "life": 8, "canadian": 8, "american": 8, "singer": 8, "songwrit": 8, "she": 8, "june": 8, "1974": 8, "ottawa": 8, "canada": 8, "began": 8, "her": 8, "career": 8, "child": 8, "actress": 8, "later": 8, "gain": [8, 17], "fame": 8, "pop": 8, "rock": 8, "artist": 8, "1990": 8, "breakthrough": 8, "album": 8, "jag": 8, "littl": 8, "pill": 8, "releas": [8, 14], "1995": 8, "becam": 8, "global": 8, "hit": 8, "earn": 8, "award": 8, "accolad": 8, "introspect": 8, "honest": 8, "lyric": 8, "address": 8, "theme": 8, "love": 8, "heartbreak": 8, "discoveri": 8, "sever": 8, "continu": 8, "evolv": 8, "music": 8, "style": 8, "made": 8, "appear": 8, "film": 8, "televis": 8, "abov": [8, 12, 13, 14, 17], "pretti": 8, "good": 8, "previou": [8, 12], "enough": 8, "increas": [8, 9], "overal": 8, "qp": [8, 9], "assum": [8, 13], "expect": [8, 14, 17], "ask": [8, 16], "start": [8, 9, 10, 15, 16], "taken": [8, 16], "225465774536133": 8, "rose": 8, "best": [8, 13], "sell": 8, "ontario": 8, "teen": 8, "star": 8, "transit": 8, "altern": 8, "throughout": 8, "won": 8, "grammi": 8, "often": [8, 12, 14], "explor": [8, 9, 14], "femal": 8, "empower": 8, "person": [8, 17], "social": 8, "commentari": 8, "notabl": 8, "song": 8, "iron": 8, "oughta": 8, "hand": 8, "pocket": 8, "act": 8, "variou": 8, "movi": 8, "dogma": 8, "jai": 8, "silent": 8, "bob": 8, "strike": 8, "back": 8, "been": [8, 14], "transpar": 8, "struggl": 8, "experi": 8, "eat": 8, "disord": 8, "depress": 8, "postpartum": 8, "advoc": 8, "mental": 8, "health": 8, "awar": 8, "charit": 8, "caus": 8, "had": 8, "influenti": 8, "industri": 8, "impact": 8, "beyond": 8, "save": [8, 16], "monei": 8, "3175082206726074": 8, "isn": 8, "exactli": 8, "who": 8, "26262593269348145": 8, "dedic": [9, 11], "speed": [9, 13, 17], "reliabl": 9, "capabl": [9, 10, 11], "supercharg": 9, "manipul": [9, 14], "cli": [9, 14, 15, 17], "line": 9, "eas": [9, 12, 13], "decreas": [9, 16], "cost": [9, 16], "galleri": 9, "our": [9, 12, 13, 16, 17], "Then": [9, 17], "featur": [9, 13, 17], "enabl": [9, 10, 12, 13, 14, 16], "spin": [9, 10], "insight": [9, 10], "guid": [9, 12], "There": [10, 14], "wai": [10, 12], "easiest": 10, "automat": [10, 16], "howev": 10, "dev": 10, "zsh": 10, "rememb": 10, "escap": 10, "bracket": 10, "hiredi": 10, "so": [10, 12, 14], "To": [10, 17], "clone": 10, "repositori": 10, "git": 10, "cd": 10, "edit": 10, "distribut": 10, "offer": [10, 13], "fulli": [10, 17], "commerci": 10, "sign": 10, "account": [10, 13, 17], "For": [10, 12, 13, 14, 17], "version": [10, 11], "deploy": 10, "kubernet": 10, "easili": [10, 13], "deploi": 10, "help": 11, "walk": [11, 12], "see": [11, 14, 17], "tool": 11, "32m11": 11, "13": 11, "52": 11, "relat": 11, "wether": 11, "anoth": [11, 13], "still": 11, "inspect": [11, 13, 15], "look": [11, 16, 17], "768": [11, 17], "54": 11, "successfulli": 11, "56": 11, "weight": [11, 12, 16], "59": 11, "00": 11, "basic": [11, 15], "statu": 11, "02": [11, 17], "03": 11, "statist": [11, 12, 13, 16], "num_doc": [11, 12, 13, 16], "num_term": [11, 12, 13, 16], "max_doc_id": [11, 12, 13, 16], "num_record": [11, 12, 13, 16], "percent_index": [11, 12, 13, 16], "hash_indexing_failur": [11, 12, 13, 16], "number_of_us": [11, 12, 13, 16], "bytes_per_record_avg": [11, 12, 13, 16], "nan": [11, 12], "doc_table_size_mb": [11, 12, 13, 16], "inverted_sz_mb": [11, 12, 13, 16], "key_table_size_mb": [11, 12, 13, 16], "offset_bits_per_record_avg": [11, 12, 13, 16], "offset_vectors_sz_mb": [11, 12, 13, 16], "offsets_per_term_avg": [11, 12, 13, 16], "records_per_doc_avg": [11, 12, 13, 16], "sortable_values_size_mb": [11, 12, 13, 16], "total_indexing_tim": [11, 12, 13, 16], "total_inverted_index_block": [11, 12, 13, 16], "vector_index_sz_mb": [11, 12, 13, 16], "00818634": 11, "enhanc": [12, 16], "step": 12, "build": 12, "prerequisit": 12, "maintain": 12, "crucial": 12, "credit_scor": [12, 13, 14], "dimension": 12, "user_embed": [12, 13, 14], "decid": 12, "user_index": [12, 14], "credit_stor": 12, "datatyp": [12, 13, 14], "usag": [12, 15], "mock": 12, "synthet": 12, "demonstr": [12, 13], "np": [12, 13], "john": [12, 13, 14], "high": [12, 13, 14], "arrai": [12, 15], "tobyt": 12, "mari": 12, "low": [12, 14], "joe": 12, "dentist": 12, "medium": [12, 14], "As": [12, 14], "seen": [12, 13], "fairli": 12, "trivial": 12, "readi": 12, "instanti": 12, "point": [12, 14, 16, 17], "its": 12, "32m18": [12, 13, 14], "25": [12, 16], "34": [12, 14, 16], "31d4f3c73f1a4c26b41cf0e2b8e0248a": 12, "c9ff740437064b919245e49ef585484d": 12, "6db5f2e09f08438785b73d8048d5350b": 12, "By": 12, "uuid": 12, "previous": [12, 16], "written": 12, "strip": [12, 16], "again": [12, 14, 16, 17], "new_data": 12, "054a3091bd99457f826f3278f4a0dc98": 12, "newli": 12, "popul": 12, "product": [12, 17], "much": 12, "larger": 12, "machin": 12, "assist": [12, 16], "jupyterutil": [12, 13, 14], "result_print": [12, 13, 14], "vector_dist": [12, 14, 16, 17], "vector_distanceuseragejobcredit_score0john1engineerhigh0mary2doctorlow0": 12, "0566299557686tyler9engineerhigh": 12, "done": 12, "rout": 12, "flag": 12, "easi": 12, "keep": 12, "place": 12, "let": [12, 14], "imagin": 12, "reindex": 12, "hnsw": 12, "modifi": [12, 13], "out": [12, 13, 16], "000400543": 12, "52588e": 12, "05": [12, 16, 17], "000138283": 12, "664": 12, "17852": 12, "clean": 12, "box": 13, "adapt": 13, "enterpris": 13, "Or": 13, "port": [13, 17], "necessari": [13, 17], "modul": [13, 16, 17], "pickl": [13, 14], "buffer_to_arrai": 13, "table_print": [13, 14], "hybrid_example_data": [13, 14], "pkl": [13, 14], "rb": [13, 14], "useragejobcredit_scoreoffice_locationuser_embeddingjohn18engineerhigh": [13, 14], "7749b": [13, 14], "derrick14doctorlow": [13, 14], "nancy94doctorhigh": [13, 14], "333": [13, 14], "tyler100engineerhigh": [13, 14], "0839": [13, 14], "3861b": [13, 14], "tim12dermatologisthigh": [13, 14], "taimur15ceolow": [13, 14], "x19": [13, 14], "joe35dentistmedium": [13, 14], "fff": [13, 14], "tradeoff": 13, "dummi": 13, "think": 13, "mutabl": 13, "deimo": 13, "ergonom": 13, "enduro": 13, "bike": 13, "4972": 13, "suit": 13, "characterist": 13, "space": 13, "memori": 13, "consumpt": 13, "concern": 13, "hash_schema": 13, "office_loc": [13, 14], "hindex": 13, "yet": [13, 14, 16, 17], "One": 13, "nuanc": 13, "effici": 13, "stat": [13, 15, 16], "44": 13, "40909": 13, "000700951": 13, "000143051": 13, "000248909": 13, "58307e": 13, "06": 13, "204545": 13, "28571": 13, "121": 13, "0200424": 13, "onc": [13, 17], "engine": 13, "vector_distanceusercredit_scoreagejoboffice_location0johnhigh18engin": [13, 14], "77490": [13, 14], "109129190445tylerhigh100engin": [13, 14], "3861": [13, 14], "nativ": 13, "multi": 13, "nest": 13, "jsonpath": 13, "sub": 13, "element": 13, "replac": 13, "solut": 13, "redisjson": 13, "select": 13, "alias": 13, "as_nam": 13, "shown": [13, 14], "json_schema": 13, "jindex": 13, "29": 13, "36": 13, "pure": 13, "json_data": 13, "10000000149011612": 13, "v1": 14, "certain": 14, "categor": 14, "38610": 14, "158809006214timhigh12dermatologist": 14, "266666650772nancyhigh94doctor": 14, "vector_distanceusercredit_scoreagejoboffice_location0derricklow14doctor": 14, "217882037163taimurlow15ceo": 14, "653301358223joemedium35dentist": 14, "might": 14, "fear": 14, "gracefulli": 14, "impli": 14, "fallback": 14, "empty_cas": 14, "77490derricklow14doctor": 14, "isol": 14, "given": 14, "numeric_filt": 14, "15": 14, "entir": 14, "quick": 14, "brown": 14, "fox": 14, "jump": 14, "lazi": 14, "dog": [14, 17], "word": 14, "text_filt": 14, "negate_text_filt": 14, "wildcard_filt": 14, "doct": 14, "fuzzy_match": 14, "condit": 14, "kilomet": 14, "mile": 14, "meter": 14, "san": 14, "francisco": 14, "offic": 14, "geo_filt": 14, "vector_distanceusercredit_scoreagejoboffice_location0": 14, "two": 14, "93": 14, "situat": 14, "revert": 14, "essenti": 14, "goe": 14, "rapid": 14, "reus": 14, "make_filt": 14, "credit": 14, "flexible_filt": 14, "just": [14, 16], "sql": 14, "solei": 14, "has_low_credit": 14, "filter_queri": 14, "usercredit_scoreagejobderricklow14doctortaimurlow15ceo": 14, "simpli": 14, "entiti": 14, "pertain": 14, "quantit": 14, "range_queri": 14, "vector_distanceusercredit_scoreagejob0johnhigh18engineer0derricklow14doctor0": 14, "109129190445tylerhigh100engineer0": 14, "fewer": 14, "vector_distanceusercredit_scoreagejob0johnhigh18engineer0derricklow14doctor": 14, "being": 14, "aka": 14, "is_engin": 14, "vector_distanceusercredit_scoreagejob0johnhigh18engin": 14, "sometim": 14, "cover": 14, "explicit": 14, "haven": 14, "implement": [14, 17], "veri": 14, "possibl": 14, "redis_py_queri": 14, "sort": 14, "sort_bi": 14, "asc": 14, "vector_distanceageusercredit_scorejoboffice_location0": 14, "109129190445100tylerhighengin": 14, "26666665077294nancyhighdoctor": 14, "65330135822335joemediumdentist": 14, "3861018johnhighengin": 14, "21788203716315taimurlowceo": 14, "3861014derricklowdoctor": 14, "15880900621412timhighdermatologist": 14, "convers": 14, "fcb5f3ea23034dab9f09eebaa9f8ecbb": 14, "payload": 14, "5d63fd6921364e76802582651ce1f681": 14, "nanci": 14, "94": 14, "0a1e7b02ae0449b18293eca52833528b": 14, "0f9e0ba47e0b462681a3256fabaedfbc": 14, "tim": 14, "12": 14, "dermatologist": 14, "debug": 14, "closest": 14, "emit": 14, "AS": 14, "sortbi": 14, "prepar": 15, "upsert": 15, "cleanup": 15, "hybrid": 15, "intersect": 15, "turn": 16, "throughput": 16, "go": 16, "ask_openai": 16, "helper": 16, "tokenizers_parallel": [16, 17], "complet": 16, "instruct": 16, "200": 16, "capit": 16, "upon": 16, "lookup": 16, "prompt_vector": 16, "els": 16, "anyth": 16, "proper": 16, "arbitrari": 16, "115049a298532be2f181edb03f766770c0db84c22aff39003fec340deaec7545": 16, "34465026855e": 16, "07": 16, "actual": 16, "widen": 16, "realli": 16, "trick": 16, "But": 16, "abl": 16, "slip": 16, "under": 16, "europ": 16, "nice": [16, 17], "measur": 16, "speedup": 16, "call": [16, 17], "took": 16, "5017588138580322": 16, "cached_start": 16, "cached_answ": 16, "cached_end": 16, "percentag": 16, "round": 16, "327639102935791": 16, "000134468": 16, "01086e": 16, "76566e": 16, "33514e": 16, "875": 16, "548": 16, "0161": 16, "AND": 16, "todai": 17, "vertex": 17, "That": 17, "happi": 17, "dai": 17, "setup": 17, "oai": 17, "001025049015879631": 17, "0030993607360869646": 17, "0024536605924367905": 17, "004484387580305338": 17, "010331203229725361": 17, "012700922787189484": 17, "005368996877223253": 17, "0029411641880869865": 17, "0070833307690918446": 17, "03386051580309868": 17, "sunni": 17, "01747742109000683": 17, "228330701356754e": 17, "0013870716793462634": 17, "025637786835432053": 17, "01985435001552105": 17, "016117358580231667": 17, "0037306349258869886": 17, "0008945261361077428": 17, "006577865686267614": 17, "025091219693422318": 17, "asyncron": 17, "popular": 17, "nlp": 17, "off": 17, "shelf": 17, "hf": 17, "00037810884532518685": 17, "05080341175198555": 17, "03514723479747772": 17, "02325104922056198": 17, "044158220291137695": 17, "020487844944000244": 17, "0014617963461205363": 17, "031261757016181946": 17, "05605152249336243": 17, "018815357238054276": 17, "pretrain": 17, "accomplish": 17, "lastli": 17, "var": 17, "cred": 17, "vtx": 17, "04373306408524513": 17, "05040992051362991": 17, "011946038343012333": 17, "043528858572244644": 17, "021510830149054527": 17, "028604144230484962": 17, "014770914800465107": 17, "01610461436212063": 17, "0036560404114425182": 17, "013746795244514942": 17, "special": 17, "attent": 17, "paid": 17, "co": 17, "1024": 17, "010856628": 17, "019683838": 17, "0062179565": 17, "003545761": 17, "047943115": 17, "0009365082": 17, "005924225": 17, "016174316": 17, "03289795": 17, "049194336": 17, "010108948": 17, "016693115": 17, "0002310276": 17, "022644043": 17, "04147339": 17, "0021324158": 17, "033477783": 17, "0005378723": 17, "02619934": 17, "058013916": 17, "ve": 17, "32m22": 17, "27": 17, "buffer": 17, "zip": 17, "cat": 17, "160862326622": 17, "273598492146": 17, "744559407234": 17}, "objects": {"redisvl.index": [[5, 0, 1, "", "SearchIndex"]], "redisvl.index.SearchIndex": [[5, 1, 1, "", "acreate"], [5, 1, 1, "", "adelete"], [5, 1, 1, "", "aexists"], [5, 1, 1, "", "afetch"], [5, 1, 1, "", "ainfo"], [5, 1, 1, "", "alistall"], [5, 1, 1, "", "aload"], [5, 1, 1, "", "aquery"], [5, 1, 1, "", "aquery_batch"], [5, 1, 1, "", "asearch"], [5, 2, 1, "", "client"], [5, 1, 1, "", "connect"], [5, 1, 1, "", "create"], [5, 1, 1, "", "delete"], [5, 1, 1, "", "disconnect"], [5, 1, 1, "", "exists"], [5, 1, 1, "", "fetch"], [5, 1, 1, "", "from_dict"], [5, 1, 1, "", "from_yaml"], [5, 1, 1, "", "info"], [5, 1, 1, "", "key"], [5, 2, 1, "", "key_separator"], [5, 1, 1, "", "listall"], [5, 1, 1, "", "load"], [5, 2, 1, "", "name"], [5, 2, 1, "", "prefix"], [5, 1, 1, "", "query"], [5, 1, 1, "", "query_batch"], [5, 1, 1, "", "search"], [5, 1, 1, "", "set_client"], [5, 2, 1, "", "storage_type"]], "redisvl.llmcache.semantic": [[0, 0, 1, "", "SemanticCache"]], "redisvl.llmcache.semantic.SemanticCache": [[0, 1, 1, "", "check"], [0, 1, 1, "", "clear"], [0, 1, 1, "", "delete"], [0, 1, 1, "", "deserialize"], [0, 2, 1, "", "distance_threshold"], [0, 1, 1, "", "hash_input"], [0, 2, 1, "", "index"], [0, 1, 1, "", "serialize"], [0, 1, 1, "", "set_threshold"], [0, 1, 1, "", "set_ttl"], [0, 1, 1, "", "set_vectorizer"], [0, 1, 1, "", "store"], [0, 2, 1, "", "ttl"]], "redisvl.query": [[4, 0, 1, "", "CountQuery"], [4, 0, 1, "", "FilterQuery"], [4, 0, 1, "", "RangeQuery"], [4, 0, 1, "", "VectorQuery"]], "redisvl.query.CountQuery": [[4, 1, 1, "", "get_filter"], [4, 2, 1, "", "params"], [4, 2, 1, "", "query"], [4, 1, 1, "", "set_filter"], [4, 1, 1, "", "set_paging"]], "redisvl.query.FilterQuery": [[4, 1, 1, "", "get_filter"], [4, 2, 1, "", "query"], [4, 1, 1, "", "set_filter"], [4, 1, 1, "", "set_paging"]], "redisvl.query.RangeQuery": [[4, 2, 1, "", "distance_threshold"], [4, 1, 1, "", "get_filter"], [4, 2, 1, "", "params"], [4, 2, 1, "", "query"], [4, 1, 1, "", "set_distance_threshold"], [4, 1, 1, "", "set_filter"], [4, 1, 1, "", "set_paging"]], "redisvl.query.VectorQuery": [[4, 1, 1, "", "get_filter"], [4, 2, 1, "", "params"], [4, 2, 1, "", "query"], [4, 1, 1, "", "set_filter"], [4, 1, 1, "", "set_paging"]], "redisvl.query.filter": [[1, 0, 1, "", "FilterExpression"], [1, 0, 1, "", "Geo"], [1, 0, 1, "", "GeoRadius"], [1, 0, 1, "", "Num"], [1, 0, 1, "", "Tag"], [1, 0, 1, "", "Text"]], "redisvl.query.filter.Geo": [[1, 1, 1, "", "__eq__"], [1, 3, 1, "", "__hash__"], [1, 1, 1, "", "__ne__"], [1, 1, 1, "", "__str__"]], "redisvl.query.filter.GeoRadius": [[1, 1, 1, "", "__init__"]], "redisvl.query.filter.Num": [[1, 1, 1, "", "__eq__"], [1, 1, 1, "", "__ge__"], [1, 1, 1, "", "__gt__"], [1, 3, 1, "", "__hash__"], [1, 1, 1, "", "__le__"], [1, 1, 1, "", "__lt__"], [1, 1, 1, "", "__ne__"], [1, 1, 1, "", "__str__"]], "redisvl.query.filter.Tag": [[1, 1, 1, "", "__eq__"], [1, 3, 1, "", "__hash__"], [1, 1, 1, "", "__init__"], [1, 1, 1, "", "__ne__"], [1, 1, 1, "", "__str__"], [1, 3, 1, "", "__weakref__"]], "redisvl.query.filter.Text": [[1, 1, 1, "", "__eq__"], [1, 3, 1, "", "__hash__"], [1, 1, 1, "", "__mod__"], [1, 1, 1, "", "__ne__"], [1, 1, 1, "", "__str__"]], "redisvl.schema": [[3, 0, 1, "", "IndexSchema"]], "redisvl.schema.IndexSchema": [[3, 1, 1, "", "add_field"], [3, 1, 1, "", "add_fields"], [3, 1, 1, "", "check_unique_field_names"], [3, 1, 1, "", "construct"], [3, 1, 1, "", "copy"], [3, 1, 1, "", "dict"], [3, 2, 1, "", "field_names"], [3, 3, 1, "", "fields"], [3, 1, 1, "", "from_dict"], [3, 1, 1, "", "from_yaml"], [3, 1, 1, "", "generate_fields"], [3, 1, 1, "", "json"], [3, 3, 1, "", "key_separator"], [3, 3, 1, "", "name"], [3, 3, 1, "", "prefix"], [3, 2, 1, "", "redis_fields"], [3, 1, 1, "", "remove_field"], [3, 3, 1, "", "storage_type"], [3, 1, 1, "", "to_dict"], [3, 1, 1, "", "to_yaml"], [3, 1, 1, "", "update_forward_refs"]], "redisvl.vectorize.text.cohere": [[6, 0, 1, "", "CohereTextVectorizer"]], "redisvl.vectorize.text.cohere.CohereTextVectorizer": [[6, 1, 1, "", "embed"], [6, 1, 1, "", "embed_many"]], "redisvl.vectorize.text.huggingface": [[6, 0, 1, "", "HFTextVectorizer"]], "redisvl.vectorize.text.huggingface.HFTextVectorizer": [[6, 1, 1, "", "embed"], [6, 1, 1, "", "embed_many"]], "redisvl.vectorize.text.openai": [[6, 0, 1, "", "OpenAITextVectorizer"]], "redisvl.vectorize.text.openai.OpenAITextVectorizer": [[6, 1, 1, "", "aembed"], [6, 1, 1, "", "aembed_many"], [6, 1, 1, "", "embed"], [6, 1, 1, "", "embed_many"]], "redisvl.vectorize.text.vertexai": [[6, 0, 1, "", "VertexAITextVectorizer"]], "redisvl.vectorize.text.vertexai.VertexAITextVectorizer": [[6, 1, 1, "", "embed"], [6, 1, 1, "", "embed_many"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"llmcach": 0, "semanticcach": [0, 16], "filter": [1, 14], "filterexpress": 1, "tag": [1, 14], "text": [1, 8, 14, 17], "num": 1, "geo": 1, "georadiu": 1, "redisvl": [2, 8, 9, 10, 12, 14], "api": 2, "indexschema": [3, 8, 12], "queri": [4, 12, 13, 14], "vectorqueri": [4, 12], "rangequeri": 4, "filterqueri": 4, "countqueri": 4, "searchindex": [5, 8, 12], "vector": [6, 9, 11, 13, 17], "hftextvector": 6, "openaitextvector": 6, "vertexaitextvector": 6, "coheretextvector": 6, "exampl": [7, 12], "galleri": 7, "question": 8, "answer": 8, "openai": [8, 17], "setup": 8, "data": [8, 12], "prepar": [8, 12], "chunk": 8, "embed": [8, 17], "creation": [8, 12], "construct": 8, "defin": [8, 12], "wikipedia": 8, "load": [8, 12], "dataset": [8, 12], "build": 8, "simpl": [8, 16], "qna": 8, "system": 8, "improv": 8, "llm": [8, 16], "cach": [8, 16], "redi": [9, 10, 11, 12, 14], "librari": [9, 11], "instal": [9, 10], "tabl": 9, "content": 9, "from": [10, 12], "sourc": 10, "cloud": 10, "stack": 10, "local": 10, "develop": 10, "enterpris": 10, "self": 10, "host": 10, "cli": [11, 12], "rvl": [11, 12], "index": [11, 12], "stat": [11, 12], "get": 12, "start": 12, "an": 12, "schema": 12, "sampl": 12, "creat": [12, 17], "inspect": [12, 14], "fetch": 12, "object": 12, "upsert": 12, "new": 12, "execut": 12, "us": 12, "asynchron": 12, "client": 12, "updat": 12, "check": 12, "cleanup": [12, 13], "hash": 13, "v": 13, "json": 13, "storag": 13, "how": 13, "choos": 13, "work": 13, "byte": 13, "string": [13, 14], "perform": [13, 16], "full": 13, "path": 13, "support": 13, "float": 13, "arrai": 13, "hybrid": 14, "numer": 14, "geograph": 14, "combin": 14, "intersect": 14, "union": 14, "dynam": 14, "count": 14, "rang": 14, "other": 14, "py": 14, "raw": 14, "user": 15, "guid": 15, "semant": 16, "initi": 16, "basic": 16, "usag": 16, "test": 16, "huggingfac": 17, "vertexai": 17, "coher": 17, "search": 17, "provid": 17}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"LLMCache": [[0, "llmcache"]], "SemanticCache": [[0, "semanticcache"]], "Filter": [[1, "filter"]], "FilterExpression": [[1, "filterexpression"]], "Tag": [[1, "tag"]], "Text": [[1, "text"]], "Num": [[1, "num"]], "Geo": [[1, "geo"]], "GeoRadius": [[1, "georadius"]], "RedisVL API": [[2, "redisvl-api"]], "RedisVL": [[2, null]], "IndexSchema": [[3, "indexschema"], [3, "id1"]], "Query": [[4, "query"]], "VectorQuery": [[4, "vectorquery"]], "RangeQuery": [[4, "rangequery"]], "FilterQuery": [[4, "filterquery"]], "CountQuery": [[4, "countquery"]], "SearchIndex": [[5, "searchindex"], [5, "id1"]], "Vectorizer": [[6, "vectorizer"]], "HFTextVectorizer": [[6, "hftextvectorizer"]], "OpenAITextVectorizer": [[6, "openaitextvectorizer"]], "VertexAITextVectorizer": [[6, "vertexaitextvectorizer"]], "CohereTextVectorizer": [[6, "coheretextvectorizer"]], "Example Gallery": [[7, "example-gallery"]], "Question and Answer with OpenAI and RedisVL": [[8, "question-and-answer-with-openai-and-redisvl"]], "Setup": [[8, "setup"]], "Data Preparation": [[8, "data-preparation"]], "Text Chunking": [[8, "text-chunking"]], "Embedding Creation": [[8, "embedding-creation"]], "Construct the SearchIndex": [[8, "construct-the-searchindex"]], "Define the wikipedia IndexSchema": [[8, "define-the-wikipedia-indexschema"]], "Load the wikipedia dataset": [[8, "load-the-wikipedia-dataset"]], "Build a simple QnA System": [[8, "build-a-simple-qna-system"]], "Improve the QnA System with LLM caching": [[8, "improve-the-qna-system-with-llm-caching"]], "Redis Vector Library (RedisVL)": [[9, "redis-vector-library-redisvl"]], "Installation": [[9, "installation"]], "Table of Contents": [[9, "table-of-contents"]], "Install RedisVL": [[10, "install-redisvl"]], "Install RedisVL from Source": [[10, "install-redisvl-from-source"]], "Installing Redis": [[10, "installing-redis"]], "Redis Cloud": [[10, "redis-cloud"]], "Redis Stack (local development)": [[10, "redis-stack-local-development"]], "Redis Enterprise (self-hosted)": [[10, "redis-enterprise-self-hosted"]], "Redis Vector Library CLI (rvl)": [[11, "redis-vector-library-cli-rvl"]], "Index": [[11, "index"]], "Stats": [[11, "stats"]], "Getting Started with RedisVL": [[12, "getting-started-with-redisvl"]], "Define an IndexSchema": [[12, "define-an-indexschema"]], "Example Schema Creation": [[12, "example-schema-creation"]], "Sample Dataset Preparation": [[12, "sample-dataset-preparation"]], "Create a SearchIndex": [[12, "create-a-searchindex"]], "Inspect with the rvl CLI": [[12, "inspect-with-the-rvl-cli"]], "Load Data to SearchIndex": [[12, "load-data-to-searchindex"]], "Fetch an object from Redis": [[12, "fetch-an-object-from-redis"]], "Upsert the index with new data": [[12, "upsert-the-index-with-new-data"]], "Creating VectorQuery Objects": [[12, "creating-vectorquery-objects"]], "Executing queries": [[12, "executing-queries"]], "Using an Asynchronous Redis Client": [[12, "using-an-asynchronous-redis-client"]], "Update a SearchIndex": [[12, "update-a-searchindex"]], "Check Index Stats": [[12, "check-index-stats"]], "Cleanup": [[12, "cleanup"], [13, "cleanup"]], "Hash vs JSON Storage": [[13, "hash-vs-json-storage"]], "Hash or JSON \u2013 how to choose?": [[13, "hash-or-json-how-to-choose"]], "Working with Hashes": [[13, "working-with-hashes"]], "Vectors as byte strings": [[13, "vectors-as-byte-strings"]], "Performing Queries": [[13, "performing-queries"]], "Working with JSON": [[13, "working-with-json"]], "Full JSON Path support": [[13, "full-json-path-support"]], "Vectors as float arrays": [[13, "vectors-as-float-arrays"]], "Querying with RedisVL": [[14, "querying-with-redisvl"]], "Hybrid Queries": [[14, "hybrid-queries"]], "Tag Filters": [[14, "tag-filters"]], "Numeric Filters": [[14, "numeric-filters"]], "Text Filters": [[14, "text-filters"]], "Geographic Filters": [[14, "geographic-filters"]], "Combining Filters": [[14, "combining-filters"]], "Intersection (\u201cand\u201d)": [[14, "intersection-and"]], "Union (\u201cor\u201d)": [[14, "union-or"]], "Dynamic Combination": [[14, "dynamic-combination"]], "Filter Queries": [[14, "filter-queries"]], "Count Queries": [[14, "count-queries"]], "Range Queries": [[14, "range-queries"]], "Other Redis Queries": [[14, "other-redis-queries"]], "Redis-Py": [[14, "redis-py"]], "Raw Redis Query String": [[14, "raw-redis-query-string"]], "Inspecting Queries": [[14, "inspecting-queries"]], "User Guides": [[15, "user-guides"]], "Semantic Caching for LLMs": [[16, "semantic-caching-for-llms"]], "Initializing SemanticCache": [[16, "initializing-semanticcache"]], "Basic Cache Usage": [[16, "basic-cache-usage"]], "Simple performance testing": [[16, "simple-performance-testing"]], "Vectorizers": [[17, "vectorizers"]], "Creating Text Embeddings": [[17, "creating-text-embeddings"]], "OpenAI": [[17, "openai"]], "Huggingface": [[17, "huggingface"]], "VertexAI": [[17, "vertexai"]], "Cohere": [[17, "cohere"]], "Search with Provider Embeddings": [[17, "search-with-provider-embeddings"]]}, "indexentries": {"semanticcache (class in redisvl.llmcache.semantic)": [[0, "redisvl.llmcache.semantic.SemanticCache"]], "check() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.check"]], "clear() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.clear"]], "delete() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.delete"]], "deserialize() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.deserialize"]], "distance_threshold (semanticcache property)": [[0, "redisvl.llmcache.semantic.SemanticCache.distance_threshold"]], "hash_input() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.hash_input"]], "index (semanticcache property)": [[0, "redisvl.llmcache.semantic.SemanticCache.index"]], "serialize() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.serialize"]], "set_threshold() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.set_threshold"]], "set_ttl() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.set_ttl"]], "set_vectorizer() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.set_vectorizer"]], "store() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.store"]], "ttl (semanticcache property)": [[0, "redisvl.llmcache.semantic.SemanticCache.ttl"]], "filterexpression (class in redisvl.query.filter)": [[1, "redisvl.query.filter.FilterExpression"]], "geo (class in redisvl.query.filter)": [[1, "redisvl.query.filter.Geo"]], "georadius (class in redisvl.query.filter)": [[1, "redisvl.query.filter.GeoRadius"]], "num (class in redisvl.query.filter)": [[1, "redisvl.query.filter.Num"]], "tag (class in redisvl.query.filter)": [[1, "redisvl.query.filter.Tag"]], "text (class in redisvl.query.filter)": [[1, "redisvl.query.filter.Text"]], "__eq__() (geo method)": [[1, "redisvl.query.filter.Geo.__eq__"]], "__eq__() (num method)": [[1, "redisvl.query.filter.Num.__eq__"]], "__eq__() (tag method)": [[1, "redisvl.query.filter.Tag.__eq__"]], "__eq__() (text method)": [[1, "redisvl.query.filter.Text.__eq__"]], "__ge__() (num method)": [[1, "redisvl.query.filter.Num.__ge__"]], "__gt__() (num method)": [[1, "redisvl.query.filter.Num.__gt__"]], "__hash__ (geo attribute)": [[1, "redisvl.query.filter.Geo.__hash__"]], "__hash__ (num attribute)": [[1, "redisvl.query.filter.Num.__hash__"]], "__hash__ (tag attribute)": [[1, "redisvl.query.filter.Tag.__hash__"]], "__hash__ (text attribute)": [[1, "redisvl.query.filter.Text.__hash__"]], "__init__() (georadius method)": [[1, "redisvl.query.filter.GeoRadius.__init__"]], "__init__() (tag method)": [[1, "redisvl.query.filter.Tag.__init__"]], "__le__() (num method)": [[1, "redisvl.query.filter.Num.__le__"]], "__lt__() (num method)": [[1, "redisvl.query.filter.Num.__lt__"]], "__mod__() (text method)": [[1, "redisvl.query.filter.Text.__mod__"]], "__ne__() (geo method)": [[1, "redisvl.query.filter.Geo.__ne__"]], "__ne__() (num method)": [[1, "redisvl.query.filter.Num.__ne__"]], "__ne__() (tag method)": [[1, "redisvl.query.filter.Tag.__ne__"]], "__ne__() (text method)": [[1, "redisvl.query.filter.Text.__ne__"]], "__str__() (geo method)": [[1, "redisvl.query.filter.Geo.__str__"]], "__str__() (num method)": [[1, "redisvl.query.filter.Num.__str__"]], "__str__() (tag method)": [[1, "redisvl.query.filter.Tag.__str__"]], "__str__() (text method)": [[1, "redisvl.query.filter.Text.__str__"]], "__weakref__ (tag attribute)": [[1, "redisvl.query.filter.Tag.__weakref__"]], "indexschema (class in redisvl.schema)": [[3, "redisvl.schema.IndexSchema"]], "add_field() (indexschema method)": [[3, "redisvl.schema.IndexSchema.add_field"]], "add_fields() (indexschema method)": [[3, "redisvl.schema.IndexSchema.add_fields"]], "check_unique_field_names() (indexschema class method)": [[3, "redisvl.schema.IndexSchema.check_unique_field_names"]], "construct() (indexschema class method)": [[3, "redisvl.schema.IndexSchema.construct"]], "copy() (indexschema method)": [[3, "redisvl.schema.IndexSchema.copy"]], "dict() (indexschema method)": [[3, "redisvl.schema.IndexSchema.dict"]], "field_names (indexschema property)": [[3, "redisvl.schema.IndexSchema.field_names"]], "fields (indexschema attribute)": [[3, "redisvl.schema.IndexSchema.fields"]], "from_dict() (indexschema class method)": [[3, "redisvl.schema.IndexSchema.from_dict"]], "from_yaml() (indexschema class method)": [[3, "redisvl.schema.IndexSchema.from_yaml"]], "generate_fields() (indexschema method)": [[3, "redisvl.schema.IndexSchema.generate_fields"]], "json() (indexschema method)": [[3, "redisvl.schema.IndexSchema.json"]], "key_separator (indexschema attribute)": [[3, "redisvl.schema.IndexSchema.key_separator"]], "name (indexschema attribute)": [[3, "redisvl.schema.IndexSchema.name"]], "prefix (indexschema attribute)": [[3, "redisvl.schema.IndexSchema.prefix"]], "redis_fields (indexschema property)": [[3, "redisvl.schema.IndexSchema.redis_fields"]], "remove_field() (indexschema method)": [[3, "redisvl.schema.IndexSchema.remove_field"]], "storage_type (indexschema attribute)": [[3, "redisvl.schema.IndexSchema.storage_type"]], "to_dict() (indexschema method)": [[3, "redisvl.schema.IndexSchema.to_dict"]], "to_yaml() (indexschema method)": [[3, "redisvl.schema.IndexSchema.to_yaml"]], "update_forward_refs() (indexschema class method)": [[3, "redisvl.schema.IndexSchema.update_forward_refs"]], "countquery (class in redisvl.query)": [[4, "redisvl.query.CountQuery"]], "filterquery (class in redisvl.query)": [[4, "redisvl.query.FilterQuery"]], "rangequery (class in redisvl.query)": [[4, "redisvl.query.RangeQuery"]], "vectorquery (class in redisvl.query)": [[4, "redisvl.query.VectorQuery"]], "distance_threshold (rangequery property)": [[4, "redisvl.query.RangeQuery.distance_threshold"]], "get_filter() (countquery method)": [[4, "redisvl.query.CountQuery.get_filter"]], "get_filter() (filterquery method)": [[4, "redisvl.query.FilterQuery.get_filter"]], "get_filter() (rangequery method)": [[4, "redisvl.query.RangeQuery.get_filter"]], "get_filter() (vectorquery method)": [[4, "redisvl.query.VectorQuery.get_filter"]], "params (countquery property)": [[4, "redisvl.query.CountQuery.params"]], "params (rangequery property)": [[4, "redisvl.query.RangeQuery.params"]], "params (vectorquery property)": [[4, "redisvl.query.VectorQuery.params"]], "query (countquery property)": [[4, "redisvl.query.CountQuery.query"]], "query (filterquery property)": [[4, "redisvl.query.FilterQuery.query"]], "query (rangequery property)": [[4, "redisvl.query.RangeQuery.query"]], "query (vectorquery property)": [[4, "redisvl.query.VectorQuery.query"]], "set_distance_threshold() (rangequery method)": [[4, "redisvl.query.RangeQuery.set_distance_threshold"]], "set_filter() (countquery method)": [[4, "redisvl.query.CountQuery.set_filter"]], "set_filter() (filterquery method)": [[4, "redisvl.query.FilterQuery.set_filter"]], "set_filter() (rangequery method)": [[4, "redisvl.query.RangeQuery.set_filter"]], "set_filter() (vectorquery method)": [[4, "redisvl.query.VectorQuery.set_filter"]], "set_paging() (countquery method)": [[4, "redisvl.query.CountQuery.set_paging"]], "set_paging() (filterquery method)": [[4, "redisvl.query.FilterQuery.set_paging"]], "set_paging() (rangequery method)": [[4, "redisvl.query.RangeQuery.set_paging"]], "set_paging() (vectorquery method)": [[4, "redisvl.query.VectorQuery.set_paging"]], "searchindex (class in redisvl.index)": [[5, "redisvl.index.SearchIndex"]], "acreate() (searchindex method)": [[5, "redisvl.index.SearchIndex.acreate"]], "adelete() (searchindex method)": [[5, "redisvl.index.SearchIndex.adelete"]], "aexists() (searchindex method)": [[5, "redisvl.index.SearchIndex.aexists"]], "afetch() (searchindex method)": [[5, "redisvl.index.SearchIndex.afetch"]], "ainfo() (searchindex method)": [[5, "redisvl.index.SearchIndex.ainfo"]], "alistall() (searchindex method)": [[5, "redisvl.index.SearchIndex.alistall"]], "aload() (searchindex method)": [[5, "redisvl.index.SearchIndex.aload"]], "aquery() (searchindex method)": [[5, "redisvl.index.SearchIndex.aquery"]], "aquery_batch() (searchindex method)": [[5, "redisvl.index.SearchIndex.aquery_batch"]], "asearch() (searchindex method)": [[5, "redisvl.index.SearchIndex.asearch"]], "client (searchindex property)": [[5, "redisvl.index.SearchIndex.client"]], "connect() (searchindex method)": [[5, "redisvl.index.SearchIndex.connect"]], "create() (searchindex method)": [[5, "redisvl.index.SearchIndex.create"]], "delete() (searchindex method)": [[5, "redisvl.index.SearchIndex.delete"]], "disconnect() (searchindex method)": [[5, "redisvl.index.SearchIndex.disconnect"]], "exists() (searchindex method)": [[5, "redisvl.index.SearchIndex.exists"]], "fetch() (searchindex method)": [[5, "redisvl.index.SearchIndex.fetch"]], "from_dict() (searchindex class method)": [[5, "redisvl.index.SearchIndex.from_dict"]], "from_yaml() (searchindex class method)": [[5, "redisvl.index.SearchIndex.from_yaml"]], "info() (searchindex method)": [[5, "redisvl.index.SearchIndex.info"]], "key() (searchindex method)": [[5, "redisvl.index.SearchIndex.key"]], "key_separator (searchindex property)": [[5, "redisvl.index.SearchIndex.key_separator"]], "listall() (searchindex method)": [[5, "redisvl.index.SearchIndex.listall"]], "load() (searchindex method)": [[5, "redisvl.index.SearchIndex.load"]], "name (searchindex property)": [[5, "redisvl.index.SearchIndex.name"]], "prefix (searchindex property)": [[5, "redisvl.index.SearchIndex.prefix"]], "query() (searchindex method)": [[5, "redisvl.index.SearchIndex.query"]], "query_batch() (searchindex method)": [[5, "redisvl.index.SearchIndex.query_batch"]], "search() (searchindex method)": [[5, "redisvl.index.SearchIndex.search"]], "set_client() (searchindex method)": [[5, "redisvl.index.SearchIndex.set_client"]], "storage_type (searchindex property)": [[5, "redisvl.index.SearchIndex.storage_type"]], "coheretextvectorizer (class in redisvl.vectorize.text.cohere)": [[6, "redisvl.vectorize.text.cohere.CohereTextVectorizer"]], "hftextvectorizer (class in redisvl.vectorize.text.huggingface)": [[6, "redisvl.vectorize.text.huggingface.HFTextVectorizer"]], "openaitextvectorizer (class in redisvl.vectorize.text.openai)": [[6, "redisvl.vectorize.text.openai.OpenAITextVectorizer"]], "vertexaitextvectorizer (class in redisvl.vectorize.text.vertexai)": [[6, "redisvl.vectorize.text.vertexai.VertexAITextVectorizer"]], "aembed() (openaitextvectorizer method)": [[6, "redisvl.vectorize.text.openai.OpenAITextVectorizer.aembed"]], "aembed_many() (openaitextvectorizer method)": [[6, "redisvl.vectorize.text.openai.OpenAITextVectorizer.aembed_many"]], "embed() (coheretextvectorizer method)": [[6, "redisvl.vectorize.text.cohere.CohereTextVectorizer.embed"]], "embed() (hftextvectorizer method)": [[6, "redisvl.vectorize.text.huggingface.HFTextVectorizer.embed"]], "embed() (openaitextvectorizer method)": [[6, "redisvl.vectorize.text.openai.OpenAITextVectorizer.embed"]], "embed() (vertexaitextvectorizer method)": [[6, "redisvl.vectorize.text.vertexai.VertexAITextVectorizer.embed"]], "embed_many() (coheretextvectorizer method)": [[6, "redisvl.vectorize.text.cohere.CohereTextVectorizer.embed_many"]], "embed_many() (hftextvectorizer method)": [[6, "redisvl.vectorize.text.huggingface.HFTextVectorizer.embed_many"]], "embed_many() (openaitextvectorizer method)": [[6, "redisvl.vectorize.text.openai.OpenAITextVectorizer.embed_many"]], "embed_many() (vertexaitextvectorizer method)": [[6, "redisvl.vectorize.text.vertexai.VertexAITextVectorizer.embed_many"]]}})