Search.setIndex({"docnames": ["api/cache", "api/filter", "api/index", "api/query", "api/schema", "api/searchindex", "api/vectorizer", "examples/index", "examples/openai_qna", "index", "overview/cli", "overview/index", "overview/installation", "user_guide/getting_started_01", "user_guide/hash_vs_json_05", "user_guide/hybrid_queries_02", "user_guide/index", "user_guide/llmcache_03", "user_guide/vectorizers_04"], "filenames": ["api/cache.rst", "api/filter.rst", "api/index.md", "api/query.rst", "api/schema.rst", "api/searchindex.rst", "api/vectorizer.rst", "examples/index.md", "examples/openai_qna.ipynb", "index.md", "overview/cli.ipynb", "overview/index.md", "overview/installation.md", "user_guide/getting_started_01.ipynb", "user_guide/hash_vs_json_05.ipynb", "user_guide/hybrid_queries_02.ipynb", "user_guide/index.md", "user_guide/llmcache_03.ipynb", "user_guide/vectorizers_04.ipynb"], "titles": ["LLMCache", "Filter", "RedisVL API", "Query", "Schema", "Search Index Classes", "Vectorizers", "Example Gallery", "Question and Answer with OpenAI and RedisVL", "Redis Vector Library (RedisVL)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rvl</span></code> ~ The RedisVL CLI", "Overview", "Install RedisVL", "Getting Started with RedisVL", "Hash vs JSON Storage", "Querying with RedisVL", "User Guides", "Semantic Caching for LLMs", "Vectorizers"], "terms": {"class": [0, 1, 2, 3, 4, 6, 9, 13, 15, 18], "name": [0, 3, 4, 5, 8, 9, 10, 12, 13, 14, 15, 17, 18], "prefix": [0, 4, 5, 8, 10, 13, 14, 15, 17, 18], "none": [0, 1, 3, 4, 5, 6, 15], "distance_threshold": [0, 3, 8, 15, 17], "0": [0, 1, 3, 4, 5, 6, 8, 10, 13, 14, 15, 17, 18], "1": [0, 1, 4, 6, 8, 10, 13, 14, 15, 17, 18], "ttl": [0, 5, 16], "vector": [0, 1, 2, 3, 4, 5, 8, 10, 12, 13, 15, 16, 17], "hftextvector": [0, 2, 18], "model": [0, 4, 6, 8, 13, 14, 17, 18], "sentenc": [0, 6, 8, 10, 13, 18], "transform": [0, 6, 13, 18], "all": [0, 5, 6, 8, 10, 12, 14, 15, 18], "mpnet": [0, 6, 18], "base": [0, 3, 4, 5, 6, 9, 15, 18], "v2": [0, 6, 18], "dim": [0, 4, 6, 8, 10, 13, 14, 15, 18], "768": [0, 10, 18], "client": [0, 5, 6, 8, 9, 15, 16], "sentencetransform": 0, "max_seq_length": 0, "384": 0, "do_lower_cas": 0, "fals": [0, 4, 5, 6, 13, 15, 17, 18], "mpnetmodel": 0, "pool": [0, 13], "word_embedding_dimens": 0, "pooling_mode_cls_token": 0, "pooling_mode_mean_token": 0, "true": [0, 3, 4, 5, 8, 13, 14, 15, 18], "pooling_mode_max_token": 0, "pooling_mode_mean_sqrt_len_token": 0, "2": [0, 3, 6, 8, 13, 14, 15, 17, 18], "normal": [0, 14], "redis_cli": [0, 5], "redis_url": [0, 5, 8, 17], "redi": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 14, 16, 17, 18], "localhost": [0, 5, 8, 9, 12, 13, 14, 15, 17, 18], "6379": [0, 5, 8, 9, 12, 13, 14, 15, 17, 18], "connection_arg": [0, 5], "kwarg": [0, 5, 6], "sourc": [0, 1, 3, 4, 5, 6, 11], "basellmcach": 0, "semant": [0, 3, 8, 9, 16], "cach": [0, 9, 16], "larg": [0, 8, 17], "languag": [0, 1, 6, 10, 17, 18], "paramet": [0, 1, 3, 4, 5, 6, 15, 18], "str": [0, 1, 3, 4, 5, 6, 8, 15, 17], "option": [0, 1, 3, 4, 5, 6, 10, 12, 13, 14, 17], "The": [0, 1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 17, 18], "search": [0, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17], "index": [0, 1, 2, 3, 4, 8, 9, 11, 14, 15, 16, 17, 18], "default": [0, 1, 3, 5, 6, 13, 14, 15], "kei": [0, 4, 5, 6, 8, 10, 13, 14, 15, 17, 18], "associ": [0, 4, 5], "us": [0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18], "float": [0, 1, 3, 4, 6, 13], "threshold": [0, 3, 8, 15, 17], "int": [0, 1, 3, 5, 6, 8], "time": [0, 4, 5, 7, 8, 17], "live": [0, 5, 8, 17], "record": [0, 8, 14, 15], "basevector": [0, 6], "A": [0, 1, 3, 4, 5, 8, 15, 17], "connect": [0, 5, 14, 15, 17, 18], "instanc": [0, 5, 10, 14, 15, 18], "url": [0, 5, 8, 13, 17], "dict": [0, 3, 4, 5, 6, 13, 14], "ani": [0, 3, 4, 5, 6, 9, 15, 17], "argument": [0, 4, 5], "rais": [0, 1, 3, 4, 5, 6], "typeerror": [0, 3, 5, 6], "If": [0, 1, 3, 4, 5, 6, 7, 8, 12], "an": [0, 1, 3, 4, 5, 6, 8, 10, 12, 14, 15, 16, 17, 18], "invalid": [0, 6, 17], "i": [0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 14, 15, 17, 18], "provid": [0, 3, 4, 5, 6, 8, 9, 13, 14, 16, 17], "valu": [0, 1, 5, 10, 13, 14, 15, 17], "valueerror": [0, 1, 4, 5, 6], "between": [0, 5, 8, 15], "check": [0, 5, 8, 10, 15, 16, 17], "prompt": [0, 8, 17], "num_result": [0, 3, 5, 8, 13, 18], "return_field": [0, 1, 3, 8, 13, 14, 15, 17, 18], "result": [0, 3, 4, 5, 8, 9, 13, 14, 15, 17, 18], "similar": [0, 8, 13, 15, 17, 18], "specifi": [0, 1, 4, 5, 6, 13, 15], "thi": [0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18], "method": [0, 4, 5, 6, 13, 15, 17], "either": [0, 1, 5, 15], "raw": [0, 5, 6], "text": [0, 2, 4, 6, 10, 13, 14, 16, 17], "convert": [0, 4, 6, 13], "input": [0, 4, 6, 17], "It": [0, 4, 5, 15, 18], "fetch": [0, 3, 5], "llm": [0, 7, 9, 16, 18], "respons": [0, 8, 17], "list": [0, 1, 3, 4, 5, 6, 8, 10, 14, 15], "represent": 0, "number": [0, 3, 5, 8, 10, 15, 17, 18], "return": [0, 1, 3, 4, 5, 6, 8, 10, 15, 17, 18], "field": [0, 1, 2, 3, 5, 8, 10, 13, 14, 15, 17, 18], "includ": [0, 3, 4, 5, 8, 13, 15, 18], "each": [0, 4, 5, 8, 18], "avail": [0, 4, 5, 10], "entri": [0, 13, 14, 17], "contain": [0, 1, 4, 5, 6, 12, 14, 15], "request": [0, 7, 15, 17, 18], "type": [0, 1, 2, 3, 5, 6, 8, 10, 13, 14, 15, 17, 18], "neither": 0, "nor": [0, 5], "when": [0, 6, 12, 14, 15], "what": [0, 8, 13, 15, 17, 18], "captial": 0, "citi": [0, 8, 17], "franc": [0, 17], "clear": [0, 17], "while": [0, 5, 8, 13, 15], "preserv": 0, "delet": [0, 5, 8, 10, 13, 14, 15, 17, 18], "remov": [0, 4, 15, 18], "underli": [0, 4, 5, 14, 15, 17], "deseri": 0, "metadata": [0, 4, 5, 8, 14, 17], "from": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 17, 18], "string": [0, 1, 5, 6, 17], "hash_input": 0, "hash": [0, 4, 5, 9, 10, 13, 15, 16, 17, 18], "sha256": 0, "serial": 0, "serliz": 0, "set_threshold": [0, 17], "set": [0, 3, 4, 5, 6, 8, 13, 14, 15, 17, 18], "distanc": [0, 1, 3, 15, 16], "set_ttl": [0, 17], "second": [0, 5, 17], "expir": [0, 5, 17], "integ": [0, 3, 8], "set_vector": 0, "must": [0, 4, 5, 6, 13, 14, 15], "valid": [0, 4, 5], "subclass": 0, "have": [0, 1, 8, 9, 10, 12, 13, 14, 15, 17, 18], "equival": 0, "dimens": [0, 6, 18], "defin": [0, 2, 5, 14, 15, 16], "schema": [0, 2, 5, 8, 9, 10, 14, 15, 16, 18], "redisvl": [0, 1, 3, 4, 5, 6, 7, 11, 14, 16, 17, 18], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 18], "mismatch": 0, "store": [0, 5, 6, 8, 13, 14, 15, 17, 18], "pair": [0, 5, 14], "along": [0, 3, 5, 6, 9, 13], "user": [0, 1, 4, 6, 8, 9, 13, 14, 15, 17, 18], "gener": [0, 5, 6, 15, 17], "demand": 0, "alongsid": 0, "ad": [0, 4, 7], "dictionari": [0, 4, 5, 6, 13, 14, 17, 18], "pari": [0, 17], "countri": [0, 17], "properti": [0, 3, 4, 5, 17], "searchindex": [0, 2, 14, 15, 16, 18], "_filter": 1, "oper": [1, 3, 5, 6, 12, 13, 15], "left": 1, "right": [1, 14, 17], "logic": [1, 17], "combin": [1, 5, 13, 16], "can": [1, 4, 5, 6, 8, 10, 12, 13, 14, 15, 17, 18], "creat": [1, 4, 5, 6, 8, 9, 10, 12, 14, 15, 16, 17], "complex": [1, 9, 15, 17], "express": [1, 3, 8, 15], "evalu": 1, "queri": [1, 2, 4, 5, 6, 8, 9, 10, 12, 16, 17, 18], "present": 1, "interfac": [1, 9, 17], "which": [1, 3, 5, 8, 12, 15, 18], "without": [1, 5, 10, 15, 17], "know": [1, 8], "import": [1, 3, 4, 5, 6, 8, 13, 14, 15, 17, 18], "brand_is_nik": 1, "brand": [1, 3, 14], "nike": [1, 3], "price_is_over_100": 1, "price": [1, 3, 14], "100": [1, 15, 17], "f": [1, 8, 15, 17], "print": [1, 8, 13, 14, 15, 17, 18], "inf": [1, 15, 17], "vectorqueri": [1, 2, 5, 8, 14, 15, 16, 18], "v": [1, 9, 15, 16, 18], "5": [1, 8, 13, 14, 15, 17, 18], "vector_field_nam": [1, 3, 5, 8, 13, 15, 18], "product_embed": 1, "product_id": 1, "filter_express": [1, 3, 14, 15], "typic": [1, 5, 14], "call": [1, 17, 18], "directli": [1, 5, 6, 18], "instead": [1, 5, 13, 15, 18], "thei": [1, 8], "built": [1, 8, 17, 18], "statement": 1, "filteroper": 1, "appli": [1, 3, 15], "__eq__": 1, "other": [1, 5, 8, 9, 10, 16], "equal": [1, 5], "union": [1, 5], "": [1, 5, 6, 8, 10, 13, 15, 17, 18], "__ne__": 1, "inequ": 1, "__str__": 1, "filterfield": 1, "repres": [1, 3], "These": [1, 6, 14, 15], "yield": [1, 5, 8, 15], "enforc": [1, 15], "exact": [1, 14, 15], "match": [1, 4, 5, 15], "suppli": 1, "term": 1, "job": [1, 13, 14, 15], "engin": [1, 13, 14, 15, 17], "__mod__": 1, "like": [1, 4, 5, 8, 10, 13, 14, 15, 17, 18], "flexibl": [1, 4, 6, 14], "varieti": [1, 6, 14], "addit": [1, 4, 5, 8], "wildcard": [1, 15], "fuzzi": [1, 15], "combinator": 1, "suffix": [1, 4], "wild": 1, "card": 1, "w": 1, "levenshtein": 1, "doctor": [1, 13, 15], "both": [1, 4, 6, 13, 14], "negat": [1, 15], "opposit": 1, "numer": [1, 4, 8, 13, 14], "zipcod": 1, "90210": 1, "__ge__": 1, "greater": [1, 8], "than": [1, 5, 8, 13, 15], "ag": [1, 13, 14, 15], "18": [1, 13, 14, 15], "__gt__": 1, "__le__": 1, "less": [1, 5], "__lt__": 1, "geograph": [1, 18], "lat": 1, "lon": 1, "within": [1, 4, 8, 10, 14, 15, 17], "spec": [1, 4], "locat": [1, 4, 6, 14, 15, 18], "122": [1, 14, 15], "4194": [1, 14, 15], "37": [1, 14, 15], "7749": [1, 14, 15], "unit": [1, 8], "m": [1, 4, 8], "outsid": 1, "longitud": 1, "latitud": 1, "radiu": [1, 15], "km": [1, 15], "geospec": 1, "specif": [1, 4, 5, 14, 15, 17], "center": 1, "circl": 1, "one": [1, 5, 8, 15], "mi": 1, "ft": [1, 4, 5], "__init__": 1, "indexschema": [2, 5, 16], "support": [2, 6, 9, 12, 15, 18], "attribut": [2, 10, 13, 17], "asyncsearchindex": [2, 8, 13], "rangequeri": [2, 15], "filterqueri": [2, 15], "countqueri": [2, 15], "filter": [2, 3, 9, 14, 16], "filterexpress": [2, 3, 15], "tag": [2, 3, 4, 5, 8, 13, 14], "num": [2, 14, 15], "geo": [2, 4, 14, 15, 18], "georadiu": [2, 15], "openaitextvector": [2, 8, 18], "vertexaitextvector": [2, 18], "coheretextvector": [2, 18], "llmcach": [2, 8, 9, 17], "semanticcach": [2, 8, 16], "dtype": [3, 13, 14], "float32": [3, 4, 13, 14, 15], "10": [3, 5, 6, 15, 17, 18], "return_scor": 3, "dialect": [3, 15], "run": [3, 5, 6, 8, 9, 10, 12, 13, 14, 15, 18], "perform": [3, 5, 6, 8, 9, 15, 16], "against": [3, 5, 6, 14], "databas": [3, 5, 6, 9, 12, 14], "declar": 3, "top": [3, 4, 8, 14], "k": 3, "bool": [3, 4, 5, 6], "whether": [3, 4, 5, 6], "redisearch": [3, 14, 15, 18], "learn": [3, 6, 13, 14], "more": [3, 6, 9, 13, 15, 18], "about": [3, 5, 6, 8, 9, 10, 15], "http": [3, 4, 6, 8, 9, 12, 18], "io": [3, 4], "doc": [3, 4, 5, 10, 14, 15, 18], "interact": [3, 5, 6, 9], "knn": [3, 15], "get_filt": 3, "get": [3, 5, 8, 9, 10, 12, 15, 16, 18], "set_filt": [3, 15], "set_pag": 3, "first": [3, 8, 10, 17, 18], "limit": [3, 15], "page": [3, 7], "zero": [3, 5], "offset": 3, "max": [3, 4], "NOT": 3, "param": [3, 15], "py": [3, 5, 18], "object": [3, 5, 14, 15, 16, 17], "command": [3, 4, 8, 9, 10, 12, 13], "rang": [3, 4, 8, 16, 17], "smaller": [3, 8], "indic": [3, 5, 8, 9, 10, 13, 14, 15, 18], "stricter": 3, "set_distance_threshold": [3, 15], "treshold": 3, "t": [3, 8, 14, 15, 18], "q": 3, "simpl": [3, 4, 5, 13, 14, 16, 18], "count": [3, 16], "some": [3, 5, 8, 10, 13, 15], "load": [3, 4, 5, 10, 14, 15, 16, 18], "structur": [4, 5, 14], "format": [4, 13, 14], "configur": [4, 5, 13], "follow": [4, 8, 10, 12, 13, 14, 15, 18], "three": [4, 8], "compon": 4, "descript": [4, 5], "version": [4, 5, 8, 10, 12, 13, 18], "current": [4, 5, 15], "separ": [4, 5, 12, 13], "storag": [4, 5, 9, 10, 13, 16, 17, 18], "subset": 4, "your": [4, 6, 7, 8, 9, 10, 12, 14, 17, 18], "data": [4, 5, 6, 10, 14, 15, 16, 17, 18], "custom": [4, 5, 8, 13, 16], "definit": [4, 13], "organ": 4, "offer": [4, 12, 14], "yaml": [4, 5, 8, 9, 10, 13, 18], "file": [4, 5, 13, 18], "python": [4, 6, 9, 10, 12, 13, 14, 17], "easi": [4, 13], "integr": [4, 6, 13], "variou": [4, 5, 8], "workflow": 4, "exampl": [4, 5, 8, 9, 14, 15, 18], "might": [4, 15, 17], "look": [4, 10, 17, 18], "key_separ": [4, 5], "storage_typ": [4, 5, 10, 14, 15, 18], "json": [4, 5, 9, 16, 18], "credit_scor": [4, 13, 14, 15], "embed": [4, 5, 6, 7, 9, 10, 13, 16, 17], "attr": [4, 8, 10, 13, 14, 15, 18], "algorithm": [4, 6, 8, 10, 13, 14, 15, 18], "flat": [4, 8, 10, 13, 14, 15, 18], "3": [4, 5, 8, 9, 12, 13, 14, 15, 17, 18], "distance_metr": [4, 8, 10, 13, 14, 15, 18], "cosin": [4, 8, 10, 13, 14, 15, 18], "datatyp": [4, 13, 14, 15], "from_yaml": [4, 5, 8, 13, 18], "from_dict": [4, 5, 13, 14, 15], "uniqu": [4, 5, 13, 15], "ensur": [4, 6, 13], "correct": 4, "unambigu": 4, "refer": [4, 5, 13], "new": [4, 5, 10, 15, 17], "pars": 4, "keyword": [4, 5], "validationerror": 4, "cannot": 4, "form": [4, 5], "indexinfo": 4, "basefield": 4, "add_field": [4, 5, 13], "field_input": 4, "add": [4, 5, 13, 17], "singl": [4, 5, 6, 8, 14, 15], "allow": [4, 5, 6, 12, 13, 15, 17, 18], "individu": [4, 17], "alreadi": [4, 5, 13, 14], "exist": [4, 5, 13], "1024": [4, 18], "extend": [4, 8, 9], "dynam": 4, "process": [4, 5, 6, 14, 18], "same": [4, 8, 10, 14, 15, 17, 18], "bio": 4, "classmethod": [4, 5], "id": [4, 5, 8, 15, 17, 18], "1536": [4, 8, 18], "file_path": 4, "path": [4, 5, 18], "remove_field": [4, 13], "field_nam": 4, "alter": 4, "to_dict": [4, 8], "to_yaml": 4, "overwrit": [4, 5, 8, 13, 14, 15, 18], "write": [4, 5], "fileexistserror": 4, "detail": 4, "basic": [4, 10, 16], "titl": [4, 8], "document": [4, 5, 6, 14, 15, 18], "weight": [4, 10, 13, 17], "no_stem": 4, "withsuffixtri": 4, "sortabl": 4, "its": [4, 13], "behavior": 4, "below": [4, 8, 13, 14, 15, 17], "calcul": [4, 17], "disabl": 4, "stem": 4, "dure": [4, 8], "optim": 4, "maintain": [4, 13], "trie": 4, "phonetic_match": 4, "enabl": [4, 5, 9, 12, 13, 14, 15, 17], "phonet": 4, "sort": [4, 15], "charact": 4, "split": [4, 8], "case_sensit": 4, "case": [4, 5, 6, 8, 13, 14, 15, 17], "sensit": 4, "common": 4, "dimension": [4, 13], "hnsw": [4, 13], "float64": 4, "metric": 4, "measur": [4, 17], "relev": [4, 6], "l2": 4, "ip": 4, "outgo": 4, "edg": 4, "per": 4, "node": 4, "layer": 4, "ef_construct": 4, "candid": 4, "build": [4, 13], "ef_runtim": 4, "epsilon": 4, "boundari": 4, "factor": 4, "note": [4, 5, 8, 13, 14], "see": [4, 10, 15, 18], "fulli": [4, 12, 18], "here": [4, 6, 9, 12, 15, 18], "primari": 5, "read": [5, 9], "across": [5, 6], "async": [5, 6, 8, 13], "instanti": [5, 13], "describ": 5, "initi": [5, 6, 16], "iter": [5, 18], "drop": [5, 8, 13], "arg": [5, 17], "aredi": 5, "server": 5, "fall": 5, "back": [5, 8], "environ": [5, 6, 9, 10, 12, 13, 14, 15, 17, 18], "variabl": [5, 6, 18], "extra": 5, "except": [5, 15], "connectionerror": 5, "fail": 5, "access": [5, 9, 18], "through": [5, 6, 10, 13, 14, 15], "runtimeerror": 5, "onli": [5, 6, 15, 18], "doe": [5, 15], "given": [5, 15], "clean": [5, 13, 14], "slate": 5, "responseerror": 5, "disconnect": 5, "otherwis": 5, "identifi": 5, "deriv": 5, "domain": [5, 14], "chunk": [5, 6], "particular": 5, "schema_dict": 5, "my": [5, 8], "rvl": [5, 8, 9, 11, 14, 15, 16, 17, 18], "schema_path": 5, "info": [5, 10, 13, 17], "inform": [5, 10, 13, 17, 18], "construct": [5, 13, 14, 15, 18], "full": [5, 8], "listal": [5, 8, 10, 13, 14, 15, 18], "id_field": [5, 13], "preprocess": [5, 6], "batch_siz": [5, 6], "automat": [5, 12, 17], "handl": [5, 6], "batch": [5, 6], "step": [5, 13], "polici": [5, 17], "portion": 5, "after": 5, "length": [5, 8], "callabl": [5, 6], "function": [5, 13, 15, 17], "befor": [5, 6, 8, 10, 14, 15, 18], "pipelin": 5, "execut": [5, 15], "size": [5, 6, 8], "test": [5, 6, 12, 13, 15, 16, 18], "foo": 5, "bar": 5, "360": 5, "predefin": 5, "def": [5, 8, 15, 17], "d": [5, 8, 9, 12, 14, 18], "new_field": 5, "123": 5, "pagin": 5, "page_s": 5, "30": [5, 15], "accept": 5, "subsequ": 5, "over": [5, 6, 8, 13, 15, 17], "basequeri": 5, "result_batch": 5, "pass": [5, 6, 13, 14], "control": 5, "item": 5, "adjust": [5, 17], "consider": 5, "expect": [5, 8, 15, 18], "volum": 5, "take": [5, 15], "post": 5, "16": [5, 13], "34": 5, "98": 5, "23": [5, 14], "wrapper": [5, 17], "around": [5, 8, 17], "rest": 5, "set_client": [5, 13], "manual": 5, "where": [5, 6, 13, 14, 15, 18], "extern": 5, "prefer": [5, 8], "from_url": [5, 8, 13], "come": [5, 12], "storagetyp": [5, 14], "mode": 5, "await": [5, 6, 8, 13, 18], "asynchron": [5, 6, 16], "etch": 5, "concurr": 5, "maximum": [5, 8], "level": [5, 14], "asyncgener": 5, "asyncio": [5, 8, 13], "design": [6, 9, 13], "leverag": [6, 9], "power": [6, 8, 9], "hug": 6, "face": 6, "particularli": 6, "scenario": [6, 13, 15], "advanc": [6, 9], "natur": 6, "understand": [6, 15], "requir": [6, 12, 13, 15], "ideal": [6, 13], "own": [6, 17], "hardwar": 6, "free": [6, 8, 12, 14], "util": [6, 8, 14, 15, 16, 18], "involv": [6, 8], "pre": [6, 18], "train": [6, 18], "vast": 6, "collect": [6, 14], "dataset": [6, 14, 15, 16], "task": [6, 10, 17], "versatil": [6, 13], "robust": 6, "differ": [6, 15, 18], "need": [6, 8, 12, 13, 14, 15, 17, 18], "addition": 6, "make": [6, 8, 9, 12, 13, 18], "sure": [6, 9, 10, 12, 14, 15, 18], "librari": [6, 10, 12, 13, 18], "instal": [6, 8, 10, 11, 13, 14, 15, 18], "pip": [6, 8, 9, 11, 18], "emb": [6, 8, 18], "hello": 6, "world": [6, 8, 13], "embed_mani": [6, 8, 18], "how": [6, 8, 10, 13, 15, 16, 17, 18], "you": [6, 7, 8, 10, 12, 13, 14, 15, 17, 18], "importerror": 6, "error": 6, "as_buff": [6, 8, 18], "byte": [6, 13, 18], "wrong": 6, "1000": [6, 8], "mani": [6, 18], "ada": [6, 8, 18], "002": [6, 8, 18], "api_config": [6, 8, 18], "openai": [6, 7, 9, 13, 17], "api": [6, 8, 9, 13, 17, 18], "authent": 6, "openai_api_kei": [6, 8, 17, 18], "obtain": [6, 17], "websit": [6, 18], "com": [6, 8, 12], "28": [6, 8], "synchron": 6, "api_kei": [6, 8, 17, 18], "your_api_kei": 6, "OR": [6, 15], "env": [6, 18], "multipl": [6, 8, 14, 15], "aembed_mani": [6, 18], "aemb": [6, 8], "textembed": 6, "gecko": 6, "googl": [6, 18], "vertexai": 6, "palm": 6, "tailor": 6, "cloud": [6, 8, 9, 13, 14, 18], "platform": [6, 8, 18], "gcp": [6, 18], "servic": [6, 17, 18], "activ": [6, 10, 14, 15, 18], "project": [6, 18], "region": [6, 18], "appropri": 6, "applic": [6, 9, 13, 14, 17], "credenti": [6, 18], "correspond": 6, "aiplatform": [6, 18], "26": [6, 8, 18], "project_id": [6, 18], "your_gcp_project_id": 6, "gcp_project_id": [6, 18], "your_gcp_loc": 6, "gcp_locat": [6, 18], "google_application_credenti": [6, 18], "path_to_your_cr": 6, "goodby": 6, "english": [6, 18], "v3": [6, 18], "coher": [6, 13], "cohere_api_kei": [6, 18], "dashboard": 6, "query_embed": [6, 8, 18], "input_typ": [6, 18], "search_queri": [6, 18], "doc_embed": 6, "search_docu": [6, 18], "visit": 6, "ai": [6, 13, 18], "re": 6, "give": 6, "db": [6, 14], "find": [6, 8, 15, 18], "classif": 6, "classifi": 6, "cluster": [6, 12], "hydrat": 6, "want": [6, 13, 15], "should": [6, 17, 18], "downstream": 6, "higher": 6, "In": [6, 8, 13, 14, 15, 18], "pleas": 7, "consid": [7, 12, 13], "open": [7, 8, 14, 15], "pull": [7, 8], "github": [7, 12], "arxiv": 7, "paper": 7, "real": [7, 13], "bytewax": 7, "question": [7, 17], "answer": [7, 17], "recommend": [7, 12, 13, 14], "hotel": 7, "chat": 7, "pdf": 7, "show": [8, 14, 15, 18], "notebook": [8, 10, 14, 15, 17, 18], "we": [8, 10, 12, 13, 14, 15, 17, 18], "download": [8, 12, 18], "articl": [8, 13], "thank": 8, "cdn": 8, "gpt": [8, 17], "imag": [8, 12], "architectur": 8, "order": [8, 17], "stack": [8, 9, 13, 14, 18], "local": [8, 9, 13, 14, 15, 18], "spin": [8, 9, 12], "up": [8, 9, 12, 13, 14, 18], "do": [8, 12, 13, 15], "termin": 8, "docker": [8, 9, 12, 14, 18], "p": [8, 9, 12, 14, 18], "8001": [8, 9, 12, 14, 18], "latest": [8, 9, 12, 14, 18], "also": [8, 9, 12, 13, 14, 15, 17, 18], "redisinsight": [8, 18], "gui": [8, 9, 12], "next": [8, 13, 17], "depend": [8, 12, 17], "few": [8, 12, 13], "thing": 8, "panda": 8, "wget": 8, "tenac": 8, "tiktoken": 8, "pd": 8, "embeddings_url": 8, "wikipedia_articles_2000": 8, "csv": 8, "df": 8, "read_csv": 8, "column": 8, "unnam": 8, "head": 8, "3661": 8, "org": 8, "wiki": 8, "photon": 8, "greek": 8, "\u03c6\u03c9\u03c2": 8, "mean": [8, 15, 17], "light": 8, "7796": 8, "thoma": 8, "20dolbi": 8, "dolbi": 8, "born": 8, "morgan": 8, "robertson": 8, "14": [8, 10, 15], "67912": 8, "embroideri": 8, "art": 8, "decor": 8, "fabric": 8, "44309": 8, "consecut": 8, "ea": 8, "4": [8, 13, 14, 15, 18], "41741": 8, "german": 8, "20empir": 8, "empir": 8, "deutsch": 8, "reich": 8, "deut": 8, "piec": 8, "becaus": [8, 13, 14, 15], "sent": [8, 17], "code": 8, "heavili": 8, "text_embedding_chunk_s": 8, "embeddings_model": 8, "n": 8, "token": [8, 15, 17], "encod": 8, "success": 8, "end": [8, 17], "len": [8, 18], "nearest": 8, "j": 8, "min": 8, "decod": 8, "stop": 8, "newlin": 8, "endswith": 8, "break": 8, "found": 8, "get_unique_id_for_file_chunk": 8, "chunk_index": 8, "chunk_text": 8, "chunked_record": 8, "file_body_str": 8, "tupl": 8, "text_chunk": 8, "token_chunk": 8, "enumer": 8, "doc_id": 8, "append": [8, 17], "content": [8, 17], "file_chunk_index": 8, "initialis": 8, "oai_token": 8, "get_encod": 8, "cl100k_base": 8, "_": [8, 17], "iterrow": 8, "chunked_data": 8, "datafram": 8, "nphoton": 8, "nelementari": 8, "particl": 8, "nthoma": 8, "nembroideri": 8, "nconsecut": 8, "numb": 8, "With": [8, 13], "broken": 8, "o": [8, 17, 18], "getpass": [8, 17, 18], "getenv": [8, 17], "enter": [8, 17, 18], "oaip": 8, "tolist": 8, "b": [8, 14], "x9e": 8, "xbf": 8, "xc9": 8, "xca": 8, "x8e": 8, "xfb": 8, "x00": [8, 14, 15], "xf8p": 8, "xbc": 8, "xe5": 8, "xda": 8, "xb7": 8, "xf1": 8, "x8c": 8, "lt": 8, "xea": 8, "xd0m": 8, "x13": 8, "x8b": 8, "ng": 8, "xce": 8, "xbck": 8, "xf0": 8, "xb2": 8, "x81": 8, "xed": 8, "xd7": 8, "xb6": 8, "x94": 8, "xa4": 8, "xba": 8, "xf5": 8, "xf3": 8, "x02": 8, "xa1": 8, "x15o": 8, "x": 8, "xfa": 8, "xbb": 8, "xd2": 8, "xd9": 8, "xaf": 8, "x92": 8, "x9a": [8, 14, 15], "xd3fl": 8, "2688": 8, "alani": 8, "morissett": 8, "20mor": 8, "ntwin": 8, "peopl": 8, "ca": 8, "ii4": 8, "gt": 8, "xe0": 8, "x18": 8, "x07": 8, "xa0": 8, "2689": 8, "brontosauru": 8, "nbrontosauru": 8, "genu": 8, "xad": 8, "xa5": 8, "xdb": 8, "xb4": 8, "2690": 8, "work": [8, 10, 13], "physic": 8, "20": [8, 13, 15], "28ph": 8, "nin": 8, "forc": 8, "x97": 8, "x82": 8, "xb9": 8, "xbbl": 8, "x90d": 8, "xb7g": 8, "x9c": 8, "x94g": 8, "2691": 8, "syllabl": 8, "na": 8, "pron": 8, "xe4": 8, "xa3": 8, "x1c": 8, "x83g": 8, "x90": 8, "x99": [8, 14, 15], "e": [8, 12, 13], "x10": 8, "2692": 8, "ngrammar": 8, "x87": 8, "x0f": 8, "x9d": 8, "xc4": 8, "xd4": 8, "xcd": [8, 14, 15], "2693": 8, "row": [8, 14], "6": [8, 14, 15], "now": [8, 13, 14, 17, 18], "them": [8, 18], "writefil": 8, "wiki_schema": 8, "32m16": [8, 15], "00": 8, "0m": [8, 10, 13, 14, 15, 18], "34m": [8, 10, 13, 14, 15, 18], "30minfo": [8, 10, 13, 14, 15, 18], "orient": 8, "action": 8, "most": [8, 17], "retriev": [8, 14], "send": 8, "chat_model": 8, "turbo": [8, 17], "make_prompt": 8, "retrieval_prompt": 8, "ha": [8, 13, 15, 17, 18], "guess": 8, "respond": [8, 17], "don": [8, 15], "retrieve_context": 8, "vector_queri": 8, "answer_quest": [8, 17], "context": 8, "chatcomplet": 8, "acreat": 8, "messag": 8, "role": 8, "max_token": [8, 17], "50": 8, "choic": [8, 17], "textwrap": 8, "wrap": 8, "width": 8, "80": 8, "known": 8, "apatosauru": 8, "long": [8, 17], "neck": 8, "dinosaur": 8, "late": 8, "jurass": 8, "period": 8, "150": 8, "million": 8, "year": 8, "ago": 8, "were": 8, "herbivor": 8, "belong": 8, "saurop": 8, "sens": [8, 13], "trackiosamidon": 8, "tell": 8, "me": 8, "life": 8, "canadian": 8, "american": 8, "singer": 8, "songwrit": 8, "actress": 8, "she": 8, "gain": [8, 18], "intern": 8, "fame": 8, "her": 8, "third": 8, "studio": 8, "album": 8, "jag": 8, "littl": 8, "pill": 8, "releas": [8, 15], "1995": 8, "went": 8, "becom": 8, "massiv": 8, "sell": 8, "abov": [8, 13, 14, 15, 18], "pretti": 8, "good": 8, "throughput": [8, 17], "stabil": 8, "previou": 8, "enough": 8, "reduc": [8, 17], "round": [8, 17], "trip": 8, "techniqu": 8, "assum": [8, 14], "profil": 8, "ask": [8, 17], "extens": [8, 17], "500": 8, "start": [8, 9, 12, 16, 17], "taken": [8, 17], "253775119781494": 8, "wa": [8, 17], "june": 8, "1974": 8, "ottawa": 8, "ontario": 8, "canada": 8, "began": 8, "career": 8, "music": 8, "industri": 8, "child": 8, "1991": 8, "howev": [8, 12], "brought": 8, "critic": 8, "acclaim": 8, "sold": 8, "33": [8, 10], "copi": [8, 14], "worldwid": 8, "produc": 8, "hit": 8, "oughta": 8, "iron": 8, "hand": 8, "pocket": 8, "throughout": 8, "continu": 8, "receiv": 8, "award": 8, "grammi": 8, "juno": 8, "billboard": 8, "often": [8, 13, 15], "explor": [8, 9, 15], "theme": 8, "love": 8, "relationship": 8, "self": [8, 18], "discoveri": 8, "spiritu": 8, "notabl": 8, "suppos": 8, "former": 8, "infatu": 8, "junki": 8, "under": [8, 17], "rug": 8, "swept": 8, "flavor": 8, "entangl": 8, "ventur": 8, "act": 8, "appear": 8, "film": 8, "dogma": 8, "radio": 8, "albemuth": 8, "well": 8, "televis": 8, "weed": 8, "sex": 8, "offstag": 8, "been": [8, 15], "struggl": 8, "mental": 8, "health": 8, "advoc": 8, "view": 8, "femin": 8, "interview": 8, "overal": 8, "had": 8, "influenti": 8, "emot": 8, "song": 8, "reson": 8, "audienc": 8, "save": [8, 17], "monei": 8, "3175082206726074": 8, "rose": 8, "1990": 8, "breakthrough": 8, "becam": 8, "best": [8, 14], "teen": 8, "pop": 8, "star": 8, "transit": 8, "altern": 8, "rock": 8, "sever": 8, "won": 8, "femal": 8, "empower": 8, "person": [8, 18], "introspect": 8, "social": 8, "commentari": 8, "movi": 8, "jai": 8, "silent": 8, "bob": 8, "strike": 8, "transpar": 8, "experi": 8, "eat": 8, "disord": 8, "depress": 8, "postpartum": 8, "awar": 8, "charit": 8, "caus": 8, "impact": 8, "beyond": 8, "isn": 8, "exactli": 8, "8": [8, 9, 12, 14, 17], "who": 8, "26262593269348145": 8, "cleanup": [8, 15, 16, 17, 18], "dedic": [9, 10], "speed": [9, 14, 18], "reliabl": 9, "capabl": [9, 10, 12, 17], "supercharg": 9, "manag": [9, 10, 12], "eas": [9, 13, 14], "cli": [9, 11, 15, 16, 18], "creation": 9, "line": 9, "increas": 9, "qp": 9, "decreas": [9, 17], "system": 9, "cost": [9, 17], "galleri": 9, "Then": [9, 18], "featur": [9, 14, 18], "insight": [9, 12], "overview": 9, "guid": [9, 13], "help": 10, "walk": [10, 13], "tool": 10, "32m20": [10, 14, 18], "09": [10, 13], "02": 10, "7": [10, 14], "relat": 10, "wether": 10, "anoth": [10, 14], "still": 10, "inspect": [10, 14, 16], "04": 10, "successfulli": 10, "05": [10, 13, 17, 18], "11": [10, 13], "statu": 10, "12": [10, 15], "statist": [10, 13, 14, 17], "num_doc": [10, 13, 14, 17], "num_term": [10, 13, 14, 17], "max_doc_id": [10, 13, 14, 17], "num_record": [10, 13, 14, 17], "percent_index": [10, 13, 14, 17], "hash_indexing_failur": [10, 13, 14, 17], "number_of_us": [10, 13, 14, 17], "bytes_per_record_avg": [10, 13, 14, 17], "nan": [10, 13], "doc_table_size_mb": [10, 13, 14, 17], "inverted_sz_mb": [10, 13, 14, 17], "key_table_size_mb": [10, 13, 14, 17], "offset_bits_per_record_avg": [10, 13, 14, 17], "offset_vectors_sz_mb": [10, 13, 14, 17], "offsets_per_term_avg": [10, 13, 14, 17], "records_per_doc_avg": [10, 13, 14, 17], "sortable_values_size_mb": [10, 13, 14, 17], "total_indexing_tim": [10, 13, 14, 17], "total_inverted_index_block": [10, 13, 14, 17], "vector_index_sz_mb": [10, 13, 14, 17], "00818634": 10, "destroi": 10, "stat": [11, 14, 16, 17], "There": [12, 13, 15], "wai": [12, 13], "easiest": 12, "dev": 12, "zsh": 12, "rememb": 12, "escap": 12, "bracket": 12, "hiredi": 12, "so": [12, 13, 15], "To": [12, 18], "clone": 12, "repositori": 12, "packag": [12, 18], "git": 12, "redisventur": [12, 18], "cd": 12, "edit": 12, "distribut": 12, "commerci": 12, "sign": 12, "account": [12, 14, 18], "For": [12, 13, 14, 15, 17, 18], "deploy": 12, "kubernet": 12, "easili": [12, 14], "deploi": 12, "enhanc": [13, 17], "prerequisit": 13, "crucial": 13, "user_embed": [13, 14, 15], "decid": 13, "user_simpl": 13, "user_simple_doc": 13, "credit_stor": 13, "usag": [13, 16], "mock": 13, "synthet": 13, "demonstr": [13, 14], "purpos": [13, 15], "numpi": [13, 14, 17], "np": [13, 14, 17], "john": [13, 14, 15], "high": [13, 14, 15], "arrai": 13, "tobyt": 13, "mari": 13, "low": [13, 15], "joe": 13, "dentist": 13, "medium": [13, 15], "9": [13, 18], "As": [13, 15], "seen": [13, 14], "fairli": 13, "trivial": 13, "readi": 13, "schema_fil": 13, "facilit": 13, "behalf": 13, "scenari": 13, "share": 13, "0x7fd9907bfe50": 13, "use_async": 13, "point": [13, 14, 15, 17, 18], "32m09": 13, "54": 13, "data_typ": 13, "99c6166a36744c3c998eccccd9fcfdbd": 13, "55ff82cbcc054ed6b91132f15fcec786": 13, "e8a36c9e75294c7697dabea0ebf17cd9": 13, "By": [13, 14], "uuid": 13, "direct": 13, "again": [13, 15, 17, 18], "new_data": 13, "tyler": [13, 15, 18], "f53ce588049a4636b5ecd8b0a81ac8ff": 13, "our": [13, 14, 17, 18], "newli": 13, "popul": 13, "product": [13, 18], "much": 13, "larger": 13, "machin": 13, "huggingfac": 13, "assist": [13, 17], "jupyterutil": [13, 14, 15], "result_print": [13, 14, 15], "vector_dist": [13, 15, 17, 18], "vector_distanceuseragejobcredit_score0john1engineerhigh0mary2doctorlow0": 13, "0566299557686tyler9engineerhigh": 13, "done": 13, "rout": 13, "0x7fd990a39610": 13, "keep": 13, "place": 13, "chang": [13, 15, 17], "imagin": 13, "reindex": 13, "modifi": [13, 14], "00044632": 13, "90735e": 13, "000138283": 13, "254": 13, "0201416": 13, "out": [14, 17], "box": 14, "adapt": 14, "enterpris": 14, "Or": 14, "necessari": [14, 18], "modul": [14, 17, 18], "pickl": [14, 15], "buffer_to_arrai": 14, "table_print": [14, 15], "hybrid_example_data": [14, 15], "pkl": [14, 15], "rb": [14, 15], "useragejobcredit_scoreoffice_locationuser_embeddingjohn18engineerhigh": [14, 15], "7749b": [14, 15], "xcc": [14, 15], "derrick14doctorlow": [14, 15], "nancy94doctorhigh": [14, 15], "333": [14, 15], "tyler100engineerhigh": [14, 15], "0839": [14, 15], "3861b": [14, 15], "tim12dermatologisthigh": [14, 15], "taimur15ceolow": [14, 15], "x19": [14, 15], "joe35dentistmedium": [14, 15], "fff": [14, 15], "tradeoff": 14, "dummi": 14, "think": 14, "mutabl": 14, "deimo": 14, "ergonom": 14, "enduro": 14, "bike": 14, "4972": 14, "suit": 14, "characterist": 14, "space": 14, "memori": 14, "consumpt": 14, "concern": 14, "hash_schema": 14, "office_loc": [14, 15], "hindex": 14, "yet": [14, 15, 17, 18], "One": 14, "nuanc": 14, "effici": 14, "44": 14, "40909": 14, "000767708": 14, "000143051": 14, "000248909": 14, "58307e": 14, "06": 14, "204545": 14, "28571": 14, "168": 14, "0202332": 14, "onc": [14, 18], "engine": 14, "17": 14, "vector_distanceusercredit_scoreagejoboffice_location0johnhigh18engin": [14, 15], "77490": [14, 15], "109129190445tylerhigh100engin": [14, 15], "3861": [14, 15], "nativ": 14, "multi": 14, "nest": 14, "jsonpath": 14, "updat": [14, 16], "sub": 14, "element": 14, "replac": 14, "solut": 14, "select": 14, "desir": 14, "AND": [14, 17], "json_schema": 14, "jindex": 14, "08": 14, "pure": 14, "sampl": [14, 16], "json_data": 14, "10000000149011612": 14, "user_queri": 15, "user_queries_doc": 15, "13": 15, "58": 15, "mai": 15, "certain": 15, "categor": 15, "38610": 15, "158808946609timhigh12dermatologist": 15, "266666650772nancyhigh94doctor": 15, "vector_distanceusercredit_scoreagejoboffice_location0derricklow14doctor": 15, "217882037163taimurlow15ceo": 15, "653301358223joemedium35dentist": 15, "fear": 15, "gracefulli": 15, "empti": [15, 17], "attempt": 15, "impli": 15, "fallback": 15, "empty_cas": 15, "77490derricklow14doctor": 15, "isol": 15, "numeric_filt": 15, "15": 15, "entir": 15, "quick": 15, "brown": 15, "fox": 15, "jump": 15, "lazi": 15, "dog": [15, 18], "word": 15, "text_filt": 15, "negate_text_filt": 15, "wildcard_filt": 15, "doct": 15, "fuzzy_match": 15, "condit": 15, "kilomet": 15, "mile": 15, "meter": 15, "feet": 15, "san": 15, "francisco": 15, "offic": 15, "geo_filt": 15, "vector_distanceusercredit_scoreagejoboffice_location0": 15, "two": 15, "93": 15, "situat": 15, "shown": 15, "revert": 15, "essenti": 15, "goe": 15, "rapid": 15, "reus": 15, "make_filt": 15, "credit": 15, "flexible_filt": 15, "just": [15, 17], "sql": 15, "solei": 15, "has_low_credit": 15, "filter_queri": 15, "usercredit_scoreagejobderricklow14doctortaimurlow15ceo": 15, "simpli": 15, "entiti": 15, "pertain": 15, "quantit": 15, "range_queri": 15, "vector_distanceusercredit_scoreagejob0johnhigh18engineer0derricklow14doctor0": 15, "109129190445tylerhigh100engineer0": 15, "small": 15, "fewer": 15, "vector_distanceusercredit_scoreagejob0johnhigh18engineer0derricklow14doctor": 15, "being": 15, "aka": 15, "is_engin": 15, "vector_distanceusercredit_scoreagejob0johnhigh18engin": 15, "sometim": 15, "cover": 15, "explicit": 15, "haven": 15, "implement": [15, 18], "veri": 15, "possibl": 15, "manipul": 15, "redis_py_queri": 15, "choos": [15, 16, 18], "sort_bi": 15, "asc": 15, "vector_distanceageusercredit_scorejoboffice_location0": 15, "109129190445100tylerhighengin": 15, "26666665077294nancyhighdoctor": 15, "65330135822335joemediumdentist": 15, "3861018johnhighengin": 15, "21788203716315taimurlowceo": 15, "3861014derricklowdoctor": 15, "15880894660912timhighdermatologist": 15, "convers": 15, "r": 15, "__dict__": 15, "6ae49de28548476ea4896f6cdb35f617": 15, "payload": 15, "14af692b215a402580991c1ea464df9d": 15, "nanci": 15, "94": 15, "435f00b6002c4ce4b08303bebacfda76": 15, "22bcd56418c744009052c3391c9b6a78": 15, "tim": 15, "dermatologist": 15, "debug": 15, "let": 15, "score": 15, "closest": 15, "emit": 15, "AS": 15, "sortbi": 15, "prepar": 16, "hybrid": 16, "threshhold": 16, "previous": 17, "go": 17, "ask_openai": 17, "helper": 17, "tokenizers_parallel": [17, 18], "complet": 17, "instruct": 17, "200": 17, "strip": 17, "capit": 17, "upon": 17, "lookup": 17, "prompt_vector": 17, "els": 17, "sinc": 17, "anyth": 17, "proper": 17, "arbitrari": 17, "115049a298532be2f181edb03f766770c0db84c22aff39003fec340deaec7545": 17, "34465026855e": 17, "07": 17, "actual": 17, "fix": 17, "quantiti": 17, "even": 17, "busi": 17, "fortun": 17, "seamlessli": 17, "widen": 17, "realli": 17, "try": 17, "trick": 17, "But": 17, "abl": 17, "slip": 17, "europ": 17, "nice": [17, 18], "futur": [17, 18], "focu": 17, "flow": 17, "bother": 17, "temporarili": 17, "hold": 17, "onto": 17, "sleep": 17, "confirm": 17, "reset": 17, "null": 17, "speedup": 17, "u": 17, "presid": 17, "took": 17, "georg": 17, "washington": 17, "984370231628418": 17, "67e0f6e28fe2a61c0022fd42bf734bb8ffe49d3e375fd69d692574295a20fc1a": 17, "avg": 17, "latenc": 17, "cached_start": 17, "cached_answ": 17, "cached_end": 17, "avg_time_with_cach": 17, "percentag": 17, "5094501972198486": 17, "48": 17, "25": 17, "19": 17, "36": 17, "40": 17, "27778": 17, "000181198": 17, "33786e": 17, "972222": 17, "074": 17, "000389099": 17, "todai": 18, "vertex": 18, "port": 18, "That": 18, "happi": 18, "dai": 18, "setup": 18, "oai": 18, "001025049015879631": 18, "0030993607360869646": 18, "0024536605924367905": 18, "004484387580305338": 18, "010331203229725361": 18, "012700922787189484": 18, "005368996877223253": 18, "0029411641880869865": 18, "0070833307690918446": 18, "03386051580309868": 18, "sunni": 18, "01747742109000683": 18, "228330701356754e": 18, "0013870716793462634": 18, "025637786835432053": 18, "01985435001552105": 18, "016117358580231667": 18, "0037306349258869886": 18, "0008945261361077428": 18, "006577865686267614": 18, "025091219693422318": 18, "asyncron": 18, "popular": 18, "nlp": 18, "off": 18, "shelf": 18, "hf": 18, "hutcherson": 18, "venv": 18, "lib": 18, "python3": 18, "site": 18, "torch": 18, "_util": 18, "831": 18, "userwarn": 18, "typedstorag": 18, "deprec": 18, "untypedstorag": 18, "matter": 18, "tensor": 18, "untyped_storag": 18, "fget": 18, "__get__": 18, "owner": 18, "00037810884532518685": 18, "05080341175198555": 18, "03514723479747772": 18, "02325104922056198": 18, "044158220291137695": 18, "020487844944000244": 18, "0014617963461205363": 18, "031261757016181946": 18, "05605152249336243": 18, "018815357238054276": 18, "pretrain": 18, "accomplish": 18, "lastli": 18, "var": 18, "cred": 18, "vtx": 18, "app": 18, "04373306408524513": 18, "05040992051362991": 18, "011946038343012333": 18, "043528858572244644": 18, "021510830149054527": 18, "028604144230484962": 18, "014770914800465107": 18, "01610461436212063": 18, "0036560404114425182": 18, "013746795244514942": 18, "special": 18, "attent": 18, "paid": 18, "co": 18, "010856628": 18, "019683838": 18, "0062179565": 18, "003545761": 18, "047943115": 18, "0009365082": 18, "005924225": 18, "016174316": 18, "03289795": 18, "049194336": 18, "009712219": 18, "016036987": 18, "8073788e": 18, "022491455": 18, "041259766": 18, "002281189": 18, "033294678": 18, "00057029724": 18, "026260376": 18, "0579834": 18, "ve": 18, "22": 18, "42": 18, "buffer": 18, "zip": 18, "17c401b679ce43cb82f3ab2280ad02f2": 18, "3fc0502bec434b17a3f06e20824b2e59": 18, "199f17b0e5d24dcaa1fd4fb41558150c": 18, "cat": 18, "160862326622": 18, "273598492146": 18, "744559407234": 18}, "objects": {"redisvl.extensions.llmcache": [[0, 0, 1, "", "SemanticCache"]], "redisvl.extensions.llmcache.SemanticCache": [[0, 1, 1, "", "check"], [0, 1, 1, "", "clear"], [0, 1, 1, "", "delete"], [0, 1, 1, "", "deserialize"], [0, 2, 1, "", "distance_threshold"], [0, 1, 1, "", "hash_input"], [0, 2, 1, "", "index"], [0, 1, 1, "", "serialize"], [0, 1, 1, "", "set_threshold"], [0, 1, 1, "", "set_ttl"], [0, 1, 1, "", "set_vectorizer"], [0, 1, 1, "", "store"], [0, 2, 1, "", "ttl"]], "redisvl.index": [[5, 0, 1, "", "AsyncSearchIndex"], [5, 0, 1, "", "SearchIndex"]], "redisvl.index.AsyncSearchIndex": [[5, 2, 1, "", "client"], [5, 1, 1, "", "connect"], [5, 1, 1, "", "create"], [5, 1, 1, "", "delete"], [5, 1, 1, "", "disconnect"], [5, 1, 1, "", "exists"], [5, 1, 1, "", "fetch"], [5, 1, 1, "", "from_dict"], [5, 1, 1, "", "from_yaml"], [5, 1, 1, "", "info"], [5, 1, 1, "", "key"], [5, 2, 1, "", "key_separator"], [5, 1, 1, "", "listall"], [5, 1, 1, "", "load"], [5, 2, 1, "", "name"], [5, 1, 1, "", "paginate"], [5, 2, 1, "", "prefix"], [5, 1, 1, "", "query"], [5, 1, 1, "", "search"], [5, 1, 1, "", "set_client"], [5, 2, 1, "", "storage_type"]], "redisvl.index.SearchIndex": [[5, 2, 1, "", "client"], [5, 1, 1, "", "connect"], [5, 1, 1, "", "create"], [5, 1, 1, "", "delete"], [5, 1, 1, "", "disconnect"], [5, 1, 1, "", "exists"], [5, 1, 1, "", "fetch"], [5, 1, 1, "", "from_dict"], [5, 1, 1, "", "from_yaml"], [5, 1, 1, "", "info"], [5, 1, 1, "", "key"], [5, 2, 1, "", "key_separator"], [5, 1, 1, "", "listall"], [5, 1, 1, "", "load"], [5, 2, 1, "", "name"], [5, 1, 1, "", "paginate"], [5, 2, 1, "", "prefix"], [5, 1, 1, "", "query"], [5, 1, 1, "", "search"], [5, 1, 1, "", "set_client"], [5, 2, 1, "", "storage_type"]], "redisvl.query": [[3, 0, 1, "", "CountQuery"], [3, 0, 1, "", "FilterQuery"], [3, 0, 1, "", "RangeQuery"], [3, 0, 1, "", "VectorQuery"]], "redisvl.query.CountQuery": [[3, 1, 1, "", "get_filter"], [3, 2, 1, "", "params"], [3, 2, 1, "", "query"], [3, 1, 1, "", "set_filter"], [3, 1, 1, "", "set_paging"]], "redisvl.query.FilterQuery": [[3, 1, 1, "", "get_filter"], [3, 2, 1, "", "query"], [3, 1, 1, "", "set_filter"], [3, 1, 1, "", "set_paging"]], "redisvl.query.RangeQuery": [[3, 2, 1, "", "distance_threshold"], [3, 1, 1, "", "get_filter"], [3, 2, 1, "", "params"], [3, 2, 1, "", "query"], [3, 1, 1, "", "set_distance_threshold"], [3, 1, 1, "", "set_filter"], [3, 1, 1, "", "set_paging"]], "redisvl.query.VectorQuery": [[3, 1, 1, "", "get_filter"], [3, 2, 1, "", "params"], [3, 2, 1, "", "query"], [3, 1, 1, "", "set_filter"], [3, 1, 1, "", "set_paging"]], "redisvl.query.filter": [[1, 0, 1, "", "FilterExpression"], [1, 0, 1, "", "Geo"], [1, 0, 1, "", "GeoRadius"], [1, 0, 1, "", "Num"], [1, 0, 1, "", "Tag"], [1, 0, 1, "", "Text"]], "redisvl.query.filter.Geo": [[1, 1, 1, "", "__eq__"], [1, 1, 1, "", "__ne__"], [1, 1, 1, "", "__str__"]], "redisvl.query.filter.GeoRadius": [[1, 1, 1, "", "__init__"]], "redisvl.query.filter.Num": [[1, 1, 1, "", "__eq__"], [1, 1, 1, "", "__ge__"], [1, 1, 1, "", "__gt__"], [1, 1, 1, "", "__le__"], [1, 1, 1, "", "__lt__"], [1, 1, 1, "", "__ne__"], [1, 1, 1, "", "__str__"]], "redisvl.query.filter.Tag": [[1, 1, 1, "", "__eq__"], [1, 1, 1, "", "__ne__"], [1, 1, 1, "", "__str__"]], "redisvl.query.filter.Text": [[1, 1, 1, "", "__eq__"], [1, 1, 1, "", "__mod__"], [1, 1, 1, "", "__ne__"], [1, 1, 1, "", "__str__"]], "redisvl.schema": [[4, 0, 1, "", "IndexSchema"]], "redisvl.schema.IndexSchema": [[4, 1, 1, "", "add_field"], [4, 1, 1, "", "add_fields"], [4, 2, 1, "", "field_names"], [4, 3, 1, "", "fields"], [4, 1, 1, "", "from_dict"], [4, 1, 1, "", "from_yaml"], [4, 3, 1, "", "index"], [4, 1, 1, "", "remove_field"], [4, 1, 1, "", "to_dict"], [4, 1, 1, "", "to_yaml"], [4, 3, 1, "", "version"]], "redisvl.utils.vectorize.text.cohere": [[6, 0, 1, "", "CohereTextVectorizer"]], "redisvl.utils.vectorize.text.cohere.CohereTextVectorizer": [[6, 1, 1, "", "embed"], [6, 1, 1, "", "embed_many"]], "redisvl.utils.vectorize.text.huggingface": [[6, 0, 1, "", "HFTextVectorizer"]], "redisvl.utils.vectorize.text.huggingface.HFTextVectorizer": [[6, 1, 1, "", "embed"], [6, 1, 1, "", "embed_many"]], "redisvl.utils.vectorize.text.openai": [[6, 0, 1, "", "OpenAITextVectorizer"]], "redisvl.utils.vectorize.text.openai.OpenAITextVectorizer": [[6, 1, 1, "", "aembed"], [6, 1, 1, "", "aembed_many"], [6, 1, 1, "", "embed"], [6, 1, 1, "", "embed_many"]], "redisvl.utils.vectorize.text.vertexai": [[6, 0, 1, "", "VertexAITextVectorizer"]], "redisvl.utils.vectorize.text.vertexai.VertexAITextVectorizer": [[6, 1, 1, "", "embed"], [6, 1, 1, "", "embed_many"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"llmcach": 0, "semanticcach": [0, 17], "filter": [1, 15], "filterexpress": 1, "tag": [1, 15], "text": [1, 8, 15, 18], "num": 1, "geo": 1, "georadiu": 1, "redisvl": [2, 8, 9, 10, 12, 13, 15], "api": 2, "queri": [3, 13, 14, 15], "vectorqueri": [3, 13], "rangequeri": 3, "filterqueri": 3, "countqueri": 3, "schema": [4, 13], "indexschema": [4, 8, 13], "defin": [4, 8, 13], "field": 4, "support": [4, 14], "type": 4, "attribut": 4, "search": [5, 18], "index": [5, 10, 13], "class": 5, "searchindex": [5, 8, 13], "asyncsearchindex": 5, "vector": [6, 9, 14, 18], "hftextvector": 6, "openaitextvector": 6, "vertexaitextvector": 6, "coheretextvector": 6, "exampl": [7, 13], "galleri": 7, "question": 8, "answer": 8, "openai": [8, 18], "setup": 8, "data": [8, 13], "prepar": [8, 13], "chunk": 8, "embed": [8, 18], "creation": [8, 13], "construct": 8, "wikipedia": 8, "load": [8, 13], "dataset": [8, 13], "build": 8, "simpl": [8, 17], "qna": 8, "system": 8, "improv": 8, "llm": [8, 17], "cach": [8, 17], "redi": [9, 12, 13, 15], "librari": 9, "instal": [9, 12], "tabl": 9, "content": 9, "rvl": [10, 13], "The": 10, "cli": [10, 13], "stat": [10, 13], "overview": 11, "pip": 12, "from": 12, "sourc": 12, "cloud": 12, "stack": 12, "local": 12, "develop": 12, "enterpris": 12, "self": 12, "host": 12, "get": 13, "start": 13, "an": 13, "sampl": 13, "creat": [13, 18], "bring": 13, "your": 13, "own": 13, "connect": 13, "instanc": 13, "let": 13, "manag": 13, "underli": 13, "inspect": [13, 15], "upsert": 13, "new": 13, "object": 13, "execut": 13, "us": 13, "asynchron": 13, "client": 13, "updat": 13, "check": 13, "cleanup": [13, 14], "hash": 14, "v": 14, "json": 14, "storag": 14, "how": 14, "choos": 14, "work": 14, "byte": 14, "string": [14, 15], "perform": [14, 17], "full": 14, "path": 14, "float": 14, "arrai": 14, "hybrid": 15, "numer": 15, "geograph": 15, "combin": 15, "intersect": 15, "union": 15, "dynam": 15, "count": 15, "rang": 15, "other": 15, "py": 15, "raw": 15, "user": 16, "guid": 16, "semant": 17, "initi": 17, "basic": 17, "usag": 17, "custom": 17, "distanc": 17, "threshhold": 17, "util": 17, "ttl": 17, "test": 17, "huggingfac": 18, "vertexai": 18, "coher": 18, "provid": 18}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"LLMCache": [[0, "llmcache"]], "SemanticCache": [[0, "semanticcache"]], "Filter": [[1, "filter"]], "FilterExpression": [[1, "filterexpression"]], "Tag": [[1, "tag"]], "Text": [[1, "text"]], "Num": [[1, "num"]], "Geo": [[1, "geo"]], "GeoRadius": [[1, "georadius"]], "RedisVL API": [[2, "redisvl-api"]], "RedisVL": [[2, null]], "Query": [[3, "query"]], "VectorQuery": [[3, "vectorquery"]], "RangeQuery": [[3, "rangequery"]], "FilterQuery": [[3, "filterquery"]], "CountQuery": [[3, "countquery"]], "Schema": [[4, "schema"]], "IndexSchema": [[4, "indexschema"]], "Defining Fields": [[4, "defining-fields"]], "Supported Field Types and Attributes": [[4, "supported-field-types-and-attributes"]], "Search Index Classes": [[5, "search-index-classes"]], "SearchIndex": [[5, "id1"]], "AsyncSearchIndex": [[5, "id2"]], "Vectorizers": [[6, "vectorizers"], [18, "vectorizers"]], "HFTextVectorizer": [[6, "hftextvectorizer"]], "OpenAITextVectorizer": [[6, "openaitextvectorizer"]], "VertexAITextVectorizer": [[6, "vertexaitextvectorizer"]], "CohereTextVectorizer": [[6, "coheretextvectorizer"]], "Example Gallery": [[7, "example-gallery"]], "Question and Answer with OpenAI and RedisVL": [[8, "question-and-answer-with-openai-and-redisvl"]], "Setup": [[8, "setup"]], "Data Preparation": [[8, "data-preparation"]], "Text Chunking": [[8, "text-chunking"]], "Embedding Creation": [[8, "embedding-creation"]], "Construct the SearchIndex": [[8, "construct-the-searchindex"]], "Define the wikipedia IndexSchema": [[8, "define-the-wikipedia-indexschema"]], "Load the wikipedia dataset": [[8, "load-the-wikipedia-dataset"]], "Build a simple QnA System": [[8, "build-a-simple-qna-system"]], "Improve the QnA System with LLM caching": [[8, "improve-the-qna-system-with-llm-caching"]], "Redis Vector Library (RedisVL)": [[9, "redis-vector-library-redisvl"]], "Installation": [[9, "installation"]], "Table of Contents": [[9, "table-of-contents"]], "rvl ~ The RedisVL CLI": [[10, "rvl-the-redisvl-cli"]], "Index": [[10, "index"]], "Stats": [[10, "stats"]], "Overview": [[11, "overview"]], "Install RedisVL": [[12, "install-redisvl"]], "Install RedisVL with Pip": [[12, "install-redisvl-with-pip"]], "Install RedisVL from Source": [[12, "install-redisvl-from-source"]], "Installing Redis": [[12, "installing-redis"]], "Redis Cloud": [[12, "redis-cloud"]], "Redis Stack (local development)": [[12, "redis-stack-local-development"]], "Redis Enterprise (self-hosted)": [[12, "redis-enterprise-self-hosted"]], "Getting Started with RedisVL": [[13, "getting-started-with-redisvl"]], "Define an IndexSchema": [[13, "define-an-indexschema"]], "Example Schema Creation": [[13, "example-schema-creation"]], "Sample Dataset Preparation": [[13, "sample-dataset-preparation"]], "Create a SearchIndex": [[13, "create-a-searchindex"]], "Bring your own Redis connection instance": [[13, "bring-your-own-redis-connection-instance"]], "Let the index manage the connection instance": [[13, "let-the-index-manage-the-connection-instance"]], "Create the underlying index": [[13, "create-the-underlying-index"]], "Inspect with the rvl CLI": [[13, "inspect-with-the-rvl-cli"]], "Load Data to SearchIndex": [[13, "load-data-to-searchindex"]], "Upsert the index with new data": [[13, "upsert-the-index-with-new-data"]], "Creating VectorQuery Objects": [[13, "creating-vectorquery-objects"]], "Executing queries": [[13, "executing-queries"]], "Using an Asynchronous Redis Client": [[13, "using-an-asynchronous-redis-client"]], "Updating a schema": [[13, "updating-a-schema"]], "Check Index Stats": [[13, "check-index-stats"]], "Cleanup": [[13, "cleanup"], [14, "cleanup"]], "Hash vs JSON Storage": [[14, "hash-vs-json-storage"]], "Hash or JSON \u2013 how to choose?": [[14, "hash-or-json-how-to-choose"]], "Working with Hashes": [[14, "working-with-hashes"]], "Vectors as byte strings": [[14, "vectors-as-byte-strings"]], "Performing Queries": [[14, "performing-queries"]], "Working with JSON": [[14, "working-with-json"]], "Full JSON Path support": [[14, "full-json-path-support"]], "Vectors as float arrays": [[14, "vectors-as-float-arrays"]], "Querying with RedisVL": [[15, "querying-with-redisvl"]], "Hybrid Queries": [[15, "hybrid-queries"]], "Tag Filters": [[15, "tag-filters"]], "Numeric Filters": [[15, "numeric-filters"]], "Text Filters": [[15, "text-filters"]], "Geographic Filters": [[15, "geographic-filters"]], "Combining Filters": [[15, "combining-filters"]], "Intersection (\u201cand\u201d)": [[15, "intersection-and"]], "Union (\u201cor\u201d)": [[15, "union-or"]], "Dynamic Combination": [[15, "dynamic-combination"]], "Filter Queries": [[15, "filter-queries"]], "Count Queries": [[15, "count-queries"]], "Range Queries": [[15, "range-queries"]], "Other Redis Queries": [[15, "other-redis-queries"]], "Redis-Py": [[15, "redis-py"]], "Raw Redis Query String": [[15, "raw-redis-query-string"]], "Inspecting Queries": [[15, "inspecting-queries"]], "User Guides": [[16, "user-guides"]], "Semantic Caching for LLMs": [[17, "semantic-caching-for-llms"]], "Initializing SemanticCache": [[17, "initializing-semanticcache"]], "Basic Cache Usage": [[17, "basic-cache-usage"]], "Customize the Distance Threshhold": [[17, "customize-the-distance-threshhold"]], "Utilize TTL": [[17, "utilize-ttl"]], "Simple Performance Testing": [[17, "simple-performance-testing"]], "Creating Text Embeddings": [[18, "creating-text-embeddings"]], "OpenAI": [[18, "openai"]], "Huggingface": [[18, "huggingface"]], "VertexAI": [[18, "vertexai"]], "Cohere": [[18, "cohere"]], "Search with Provider Embeddings": [[18, "search-with-provider-embeddings"]]}, "indexentries": {"semanticcache (class in redisvl.extensions.llmcache)": [[0, "redisvl.extensions.llmcache.SemanticCache"]], "check() (semanticcache method)": [[0, "redisvl.extensions.llmcache.SemanticCache.check"]], "clear() (semanticcache method)": [[0, "redisvl.extensions.llmcache.SemanticCache.clear"]], "delete() (semanticcache method)": [[0, "redisvl.extensions.llmcache.SemanticCache.delete"]], "deserialize() (semanticcache method)": [[0, "redisvl.extensions.llmcache.SemanticCache.deserialize"]], "distance_threshold (semanticcache property)": [[0, "redisvl.extensions.llmcache.SemanticCache.distance_threshold"]], "hash_input() (semanticcache method)": [[0, "redisvl.extensions.llmcache.SemanticCache.hash_input"]], "index (semanticcache property)": [[0, "redisvl.extensions.llmcache.SemanticCache.index"]], "serialize() (semanticcache method)": [[0, "redisvl.extensions.llmcache.SemanticCache.serialize"]], "set_threshold() (semanticcache method)": [[0, "redisvl.extensions.llmcache.SemanticCache.set_threshold"]], "set_ttl() (semanticcache method)": [[0, "redisvl.extensions.llmcache.SemanticCache.set_ttl"]], "set_vectorizer() (semanticcache method)": [[0, "redisvl.extensions.llmcache.SemanticCache.set_vectorizer"]], "store() (semanticcache method)": [[0, "redisvl.extensions.llmcache.SemanticCache.store"]], "ttl (semanticcache property)": [[0, "redisvl.extensions.llmcache.SemanticCache.ttl"]], "filterexpression (class in redisvl.query.filter)": [[1, "redisvl.query.filter.FilterExpression"]], "geo (class in redisvl.query.filter)": [[1, "redisvl.query.filter.Geo"]], "georadius (class in redisvl.query.filter)": [[1, "redisvl.query.filter.GeoRadius"]], "num (class in redisvl.query.filter)": [[1, "redisvl.query.filter.Num"]], "tag (class in redisvl.query.filter)": [[1, "redisvl.query.filter.Tag"]], "text (class in redisvl.query.filter)": [[1, "redisvl.query.filter.Text"]], "__eq__() (geo method)": [[1, "redisvl.query.filter.Geo.__eq__"]], "__eq__() (num method)": [[1, "redisvl.query.filter.Num.__eq__"]], "__eq__() (tag method)": [[1, "redisvl.query.filter.Tag.__eq__"]], "__eq__() (text method)": [[1, "redisvl.query.filter.Text.__eq__"]], "__ge__() (num method)": [[1, "redisvl.query.filter.Num.__ge__"]], "__gt__() (num method)": [[1, "redisvl.query.filter.Num.__gt__"]], "__init__() (georadius method)": [[1, "redisvl.query.filter.GeoRadius.__init__"]], "__le__() (num method)": [[1, "redisvl.query.filter.Num.__le__"]], "__lt__() (num method)": [[1, "redisvl.query.filter.Num.__lt__"]], "__mod__() (text method)": [[1, "redisvl.query.filter.Text.__mod__"]], "__ne__() (geo method)": [[1, "redisvl.query.filter.Geo.__ne__"]], "__ne__() (num method)": [[1, "redisvl.query.filter.Num.__ne__"]], "__ne__() (tag method)": [[1, "redisvl.query.filter.Tag.__ne__"]], "__ne__() (text method)": [[1, "redisvl.query.filter.Text.__ne__"]], "__str__() (geo method)": [[1, "redisvl.query.filter.Geo.__str__"]], "__str__() (num method)": [[1, "redisvl.query.filter.Num.__str__"]], "__str__() (tag method)": [[1, "redisvl.query.filter.Tag.__str__"]], "__str__() (text method)": [[1, "redisvl.query.filter.Text.__str__"]], "countquery (class in redisvl.query)": [[3, "redisvl.query.CountQuery"]], "filterquery (class in redisvl.query)": [[3, "redisvl.query.FilterQuery"]], "rangequery (class in redisvl.query)": [[3, "redisvl.query.RangeQuery"]], "vectorquery (class in redisvl.query)": [[3, "redisvl.query.VectorQuery"]], "distance_threshold (rangequery property)": [[3, "redisvl.query.RangeQuery.distance_threshold"]], "get_filter() (countquery method)": [[3, "redisvl.query.CountQuery.get_filter"]], "get_filter() (filterquery method)": [[3, "redisvl.query.FilterQuery.get_filter"]], "get_filter() (rangequery method)": [[3, "redisvl.query.RangeQuery.get_filter"]], "get_filter() (vectorquery method)": [[3, "redisvl.query.VectorQuery.get_filter"]], "params (countquery property)": [[3, "redisvl.query.CountQuery.params"]], "params (rangequery property)": [[3, "redisvl.query.RangeQuery.params"]], "params (vectorquery property)": [[3, "redisvl.query.VectorQuery.params"]], "query (countquery property)": [[3, "redisvl.query.CountQuery.query"]], "query (filterquery property)": [[3, "redisvl.query.FilterQuery.query"]], "query (rangequery property)": [[3, "redisvl.query.RangeQuery.query"]], "query (vectorquery property)": [[3, "redisvl.query.VectorQuery.query"]], "set_distance_threshold() (rangequery method)": [[3, "redisvl.query.RangeQuery.set_distance_threshold"]], "set_filter() (countquery method)": [[3, "redisvl.query.CountQuery.set_filter"]], "set_filter() (filterquery method)": [[3, "redisvl.query.FilterQuery.set_filter"]], "set_filter() (rangequery method)": [[3, "redisvl.query.RangeQuery.set_filter"]], "set_filter() (vectorquery method)": [[3, "redisvl.query.VectorQuery.set_filter"]], "set_paging() (countquery method)": [[3, "redisvl.query.CountQuery.set_paging"]], "set_paging() (filterquery method)": [[3, "redisvl.query.FilterQuery.set_paging"]], "set_paging() (rangequery method)": [[3, "redisvl.query.RangeQuery.set_paging"]], "set_paging() (vectorquery method)": [[3, "redisvl.query.VectorQuery.set_paging"]], "indexschema (class in redisvl.schema)": [[4, "redisvl.schema.IndexSchema"]], "add_field() (indexschema method)": [[4, "redisvl.schema.IndexSchema.add_field"]], "add_fields() (indexschema method)": [[4, "redisvl.schema.IndexSchema.add_fields"]], "field_names (indexschema property)": [[4, "redisvl.schema.IndexSchema.field_names"]], "fields (indexschema attribute)": [[4, "redisvl.schema.IndexSchema.fields"]], "from_dict() (indexschema class method)": [[4, "redisvl.schema.IndexSchema.from_dict"]], "from_yaml() (indexschema class method)": [[4, "redisvl.schema.IndexSchema.from_yaml"]], "index (indexschema attribute)": [[4, "redisvl.schema.IndexSchema.index"]], "remove_field() (indexschema method)": [[4, "redisvl.schema.IndexSchema.remove_field"]], "to_dict() (indexschema method)": [[4, "redisvl.schema.IndexSchema.to_dict"]], "to_yaml() (indexschema method)": [[4, "redisvl.schema.IndexSchema.to_yaml"]], "version (indexschema attribute)": [[4, "redisvl.schema.IndexSchema.version"]], "asyncsearchindex (class in redisvl.index)": [[5, "redisvl.index.AsyncSearchIndex"]], "searchindex (class in redisvl.index)": [[5, "redisvl.index.SearchIndex"]], "client (asyncsearchindex property)": [[5, "redisvl.index.AsyncSearchIndex.client"]], "client (searchindex property)": [[5, "redisvl.index.SearchIndex.client"]], "connect() (asyncsearchindex method)": [[5, "redisvl.index.AsyncSearchIndex.connect"]], "connect() (searchindex method)": [[5, "redisvl.index.SearchIndex.connect"]], "create() (asyncsearchindex method)": [[5, "redisvl.index.AsyncSearchIndex.create"]], "create() (searchindex method)": [[5, "redisvl.index.SearchIndex.create"]], "delete() (asyncsearchindex method)": [[5, "redisvl.index.AsyncSearchIndex.delete"]], "delete() (searchindex method)": [[5, "redisvl.index.SearchIndex.delete"]], "disconnect() (asyncsearchindex method)": [[5, "redisvl.index.AsyncSearchIndex.disconnect"]], "disconnect() (searchindex method)": [[5, "redisvl.index.SearchIndex.disconnect"]], "exists() (asyncsearchindex method)": [[5, "redisvl.index.AsyncSearchIndex.exists"]], "exists() (searchindex method)": [[5, "redisvl.index.SearchIndex.exists"]], "fetch() (asyncsearchindex method)": [[5, "redisvl.index.AsyncSearchIndex.fetch"]], "fetch() (searchindex method)": [[5, "redisvl.index.SearchIndex.fetch"]], "from_dict() (asyncsearchindex class method)": [[5, "redisvl.index.AsyncSearchIndex.from_dict"]], "from_dict() (searchindex class method)": [[5, "redisvl.index.SearchIndex.from_dict"]], "from_yaml() (asyncsearchindex class method)": [[5, "redisvl.index.AsyncSearchIndex.from_yaml"]], "from_yaml() (searchindex class method)": [[5, "redisvl.index.SearchIndex.from_yaml"]], "info() (asyncsearchindex method)": [[5, "redisvl.index.AsyncSearchIndex.info"]], "info() (searchindex method)": [[5, "redisvl.index.SearchIndex.info"]], "key() (asyncsearchindex method)": [[5, "redisvl.index.AsyncSearchIndex.key"]], "key() (searchindex method)": [[5, "redisvl.index.SearchIndex.key"]], "key_separator (asyncsearchindex property)": [[5, "redisvl.index.AsyncSearchIndex.key_separator"]], "key_separator (searchindex property)": [[5, "redisvl.index.SearchIndex.key_separator"]], "listall() (asyncsearchindex method)": [[5, "redisvl.index.AsyncSearchIndex.listall"]], "listall() (searchindex method)": [[5, "redisvl.index.SearchIndex.listall"]], "load() (asyncsearchindex method)": [[5, "redisvl.index.AsyncSearchIndex.load"]], "load() (searchindex method)": [[5, "redisvl.index.SearchIndex.load"]], "name (asyncsearchindex property)": [[5, "redisvl.index.AsyncSearchIndex.name"]], "name (searchindex property)": [[5, "redisvl.index.SearchIndex.name"]], "paginate() (asyncsearchindex method)": [[5, "redisvl.index.AsyncSearchIndex.paginate"]], "paginate() (searchindex method)": [[5, "redisvl.index.SearchIndex.paginate"]], "prefix (asyncsearchindex property)": [[5, "redisvl.index.AsyncSearchIndex.prefix"]], "prefix (searchindex property)": [[5, "redisvl.index.SearchIndex.prefix"]], "query() (asyncsearchindex method)": [[5, "redisvl.index.AsyncSearchIndex.query"]], "query() (searchindex method)": [[5, "redisvl.index.SearchIndex.query"]], "search() (asyncsearchindex method)": [[5, "redisvl.index.AsyncSearchIndex.search"]], "search() (searchindex method)": [[5, "redisvl.index.SearchIndex.search"]], "set_client() (asyncsearchindex method)": [[5, "redisvl.index.AsyncSearchIndex.set_client"]], "set_client() (searchindex method)": [[5, "redisvl.index.SearchIndex.set_client"]], "storage_type (asyncsearchindex property)": [[5, "redisvl.index.AsyncSearchIndex.storage_type"]], "storage_type (searchindex property)": [[5, "redisvl.index.SearchIndex.storage_type"]], "coheretextvectorizer (class in redisvl.utils.vectorize.text.cohere)": [[6, "redisvl.utils.vectorize.text.cohere.CohereTextVectorizer"]], "hftextvectorizer (class in redisvl.utils.vectorize.text.huggingface)": [[6, "redisvl.utils.vectorize.text.huggingface.HFTextVectorizer"]], "openaitextvectorizer (class in redisvl.utils.vectorize.text.openai)": [[6, "redisvl.utils.vectorize.text.openai.OpenAITextVectorizer"]], "vertexaitextvectorizer (class in redisvl.utils.vectorize.text.vertexai)": [[6, "redisvl.utils.vectorize.text.vertexai.VertexAITextVectorizer"]], "aembed() (openaitextvectorizer method)": [[6, "redisvl.utils.vectorize.text.openai.OpenAITextVectorizer.aembed"]], "aembed_many() (openaitextvectorizer method)": [[6, "redisvl.utils.vectorize.text.openai.OpenAITextVectorizer.aembed_many"]], "embed() (coheretextvectorizer method)": [[6, "redisvl.utils.vectorize.text.cohere.CohereTextVectorizer.embed"]], "embed() (hftextvectorizer method)": [[6, "redisvl.utils.vectorize.text.huggingface.HFTextVectorizer.embed"]], "embed() (openaitextvectorizer method)": [[6, "redisvl.utils.vectorize.text.openai.OpenAITextVectorizer.embed"]], "embed() (vertexaitextvectorizer method)": [[6, "redisvl.utils.vectorize.text.vertexai.VertexAITextVectorizer.embed"]], "embed_many() (coheretextvectorizer method)": [[6, "redisvl.utils.vectorize.text.cohere.CohereTextVectorizer.embed_many"]], "embed_many() (hftextvectorizer method)": [[6, "redisvl.utils.vectorize.text.huggingface.HFTextVectorizer.embed_many"]], "embed_many() (openaitextvectorizer method)": [[6, "redisvl.utils.vectorize.text.openai.OpenAITextVectorizer.embed_many"]], "embed_many() (vertexaitextvectorizer method)": [[6, "redisvl.utils.vectorize.text.vertexai.VertexAITextVectorizer.embed_many"]]}})