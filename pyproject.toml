[tool.poetry]
name = "redisvl"
version = "0.1.2"
description = "Python client library and CLI for using Redis as a vector database"
authors = ["Redis Inc. <sam.partee@redis.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/RedisVentures/redisvl"
repository = "https://github.com/RedisVentures/redisvl"
documentation = "https://www.redisvl.com"
keywords = ["ai", "redis", "redis-client", "vector-database", "vector-search"]
classifiers = [
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "License :: OSI Approved :: MIT License",
]
packages = [{ include = "redisvl", from = "." }]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
numpy = "*"
pyyaml = "*"
coloredlogs = "*"
redis = ">=5.0.0"
pydantic = { version = ">=2,<3" }
tenacity = ">=8.2.2"
tabulate = { version = ">=0.9.0,<1" }
openai = ">=1.13.0"
sentence-transformers = ">=2.2.2"
google-cloud-aiplatform = ">=1.26"
cohere = ">=4.44"

[tool.poetry.dev-dependencies]
black = ">=20.8b1"
isort = ">=5.6.4"
pylint = ">=2.6.0"
pytest = ">=6.0.0"
pytest-cov = ">=2.10.1"
pytest-asyncio = "*"
mypy = "*"
types-redis = "*"
types-pyyaml = "*"
types-tabulate = "*"
treon = "*"

[tool.poetry.scripts]
rvl = "redisvl.cli.runner:main"
format = "scripts:format"
check-format = "scripts:check_format"
sort-imports = "scripts:sort_imports"
check-sort-imports = "scripts:check_sort_imports"
check-lint = "scripts:check_lint"
mypy = "scripts:mypy"
test = "scripts:test"
test-verbose = "scripts:test_verbose"
test-cov = "scripts:test_cov"
cov = "scripts:cov"
test-notebooks = "scripts:test_notebooks"

[tool.poetry.group.test.dependencies]
testcontainers = "^4.3.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
exclude = '''
(
  | \.egg
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build
  | build
  | dist
  | setup.py
)
'''

[tool.pytest.ini_options]
log_cli = true
asyncio_mode = "auto"

[tool.coverage.run]
source = ["redisvl"]

[tool.coverage.report]
ignore_errors = true

[tool.coverage.html]
directory = "htmlcov"

[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
